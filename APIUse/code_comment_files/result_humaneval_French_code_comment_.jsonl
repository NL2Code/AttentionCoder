{"task_id": "HumanEval/0", "keyWords": "V\u00e9rifiez s\u2019il y a deux nombres dans une liste donn\u00e9e de nombres qui sont moins \u00e9loign\u00e9s l\u2019un de l\u2019autre que le seuil donn\u00e9.\n"}
{"task_id": "HumanEval/1", "keyWords": "L\u2019entr\u00e9e de cette fonction est une cha\u00eene contenant plusieurs ensembles de parenth\u00e8ses imbriqu\u00e9es. Votre but est de s\u00e9parer ces groupes en cha\u00eenes individuelles et de retourner une liste de ces cha\u00eenes. Les groupes individuels sont \u00e9quilibr\u00e9s (chaque parenth\u00e8se ouverte est correctement ferm\u00e9e) et ignor\u00e9s sans imbriquer les uns avec les autres\nEntrez les espaces dans la cha\u00eene.\n"}
{"task_id": "HumanEval/2", "keyWords": "\u00c9tant donn\u00e9 un nombre flottant positif, il peut \u00eatre d\u00e9compos\u00e9 en parties et entiers (le plus entier est inf\u00e9rieur au nombre donn\u00e9) et d\u00e9cimales (le reste est toujours inf\u00e9rieur \u00e0 1).\n\nRetourne la partie d\u00e9cimale du nombre.\n"}
{"task_id": "HumanEval/3", "keyWords": "Vous obtenez une liste des op\u00e9rations de d\u00e9p\u00f4t et de retrait pour les comptes bancaires dont le solde initial est 0. Votre t\u00e2che est de d\u00e9tecter si le solde du compte est inf\u00e9rieur \u00e0 z\u00e9ro \u00e0 tout moment, et \u00e0 ce point la fonction devrait retourner vrai. Sinon, il devrait renvoyer False.\n"}
{"task_id": "HumanEval/4", "keyWords": "L\u2019\u00e9cart absolu moyen est calcul\u00e9 autour de la moyenne de cet ensemble de donn\u00e9es pour une liste donn\u00e9e de nombres d\u2019entr\u00e9e. L\u2019\u00e9cart absolu moyen est la diff\u00e9rence absolue moyenne pour chaque \u00e9l\u00e9ment et point central (dans ce cas la moyenne) :\nMAD = average | x - x_mean |\n"}
{"task_id": "HumanEval/5", "keyWords": "Ins\u00e9rez un nombre \"d\u00e9m\u00e8tre\" entre chaque deux \u00e9l\u00e9ments successifs de la liste d\u2019entr\u00e9e \"num\u00e9ros\".\n"}
{"task_id": "HumanEval/6", "keyWords": "L\u2019entr\u00e9e de cette fonction est une cha\u00eene de caract\u00e8res repr\u00e9sentant plusieurs groupes de parenth\u00e8ses imbriqu\u00e9es s\u00e9par\u00e9es par des espaces. Pour chaque groupe, les parenth\u00e8ses de sortie sont imbriqu\u00e9es au plus profond.\nPar exemple, (()()) a au maximum deux niveaux imbriqu\u00e9s, tandis que ((())) en a trois.\n\n"}
{"task_id": "HumanEval/7", "keyWords": "Filtrer uniquement la liste des entr\u00e9es contenant des cha\u00eenes de caract\u00e8res donnant des stator\n"}
{"task_id": "HumanEval/8", "keyWords": "Pour une liste donn\u00e9e d\u2019entiers, retourne un tuple compos\u00e9 de la somme de tous les entiers de la liste par le produit. La somme de la liste vide doit \u00eatre \u00e9gale \u00e0 0 et le produit de la liste vide doit \u00eatre \u00e9gal \u00e0 1.\n"}
{"task_id": "HumanEval/9", "keyWords": "\u00c0 partir d\u2019une liste donn\u00e9e d\u2019entiers, une liste des \u00e9l\u00e9ments qui ont augment\u00e9 jusqu\u2019\u00e0 la longueur de la liste donn\u00e9e est g\u00e9n\u00e9r\u00e9e de fa\u00e7on s\u00e9quentielle.\n"}
{"task_id": "HumanEval/10", "keyWords": " trouve le palindrome le plus court commen\u00e7ant par la cha\u00eene fournie.\nL\u2019id\u00e9e de l\u2019algorithme est simple:\n- trouver le suffixe palindrome le plus long dans la cha\u00eene fournie.\n- ajouter \u00e0 la fin de la cha\u00eene le pr\u00e9fixe de la cha\u00eene qui pr\u00e9c\u00e8de le suffixe palindrome.\n"}
{"task_id": "HumanEval/11", "keyWords": "Les entr\u00e9es sont les deux cha\u00eenes a et b, avec seulement 1 et 0. Le xor binaire est ex\u00e9cut\u00e9 sur ces entr\u00e9es et retourne le r\u00e9sultat sous forme de cha\u00eene.\n"}
{"task_id": "HumanEval/12", "keyWords": "Dans la liste des cha\u00eenes, la cha\u00eene la plus longue est retourn\u00e9e. S\u2019il y en a plusieurs, la premi\u00e8re cha\u00eene de m\u00eame longueur est retourn\u00e9e. Retourne None si la liste d\u2019entr\u00e9e est vide.\n"}
{"task_id": "HumanEval/13", "keyWords": "Retourne le plus grand diviseur commun de deux entiers a et b\n"}
{"task_id": "HumanEval/14", "keyWords": "Retourne une liste de tous les pr\u00e9fixes de la cha\u00eene d\u2019entr\u00e9e, du plus court au plus long\n"}
{"task_id": "HumanEval/15", "keyWords": "Retourne une cha\u00eene de caract\u00e8res contenant des nombres s\u00e9par\u00e9s par des espaces, de 0 \u00e0 n inclus.\n"}
{"task_id": "HumanEval/16", "keyWords": "\u00c9tant donn\u00e9 une cha\u00eene, d\u00e9couvrez combien de caract\u00e8res diff\u00e9rents (quelle que soit la casse) il est compos\u00e9\n"}
{"task_id": "HumanEval/17", "keyWords": "L\u2019entr\u00e9e de cette fonction est une cha\u00eene de caract\u00e8res repr\u00e9sentant les notes dans un format ASCII sp\u00e9cial. Votre t\u00e2che est d\u2019analyser cette cha\u00eene et de renvoyer une liste d\u2019entiers correspondant au nombre de battements par battement, et non au nombre total de battements en cours.\n\nVoici un texte explicatif:\n\u2019o\u2019 - full tone, dur\u00e9e 4 battements\n\u2019 O galil\u00e9ennes \u2019 demi-ton pendant deux\nLe galil\u00e9ennes \"- notes, dans une\n\n"}
{"task_id": "HumanEval/18", "keyWords": "D\u00e9couvrez combien de fois une sous-cha\u00eene donn\u00e9e peut \u00eatre trouv\u00e9e dans la cha\u00eene originale. Calcul des cas de chevauchement.\n"}
{"task_id": "HumanEval/19", "keyWords": "L\u2019entr\u00e9e est une cha\u00eene de chiffres s\u00e9par\u00e9s par des espaces, de \u2019on\u2019 \u00e0 \u2019non\u2019. L\u2019option z\u00e9ro \", efficace, one two \", \"trois\", \"four\", \"5\", \"six\", \"seven\", huit \"et\" neuf \".\nRetourne une cha\u00eene tri\u00e9e par nombre\n"}
{"task_id": "HumanEval/20", "keyWords": "Dans la liste de nombres fournie (longueur au moins 2), s\u00e9lectionnez et retournez deux nombres proches l\u2019un de l\u2019autre et les retourner dans l\u2019ordre (le plus petit, le plus grand).\n"}
{"task_id": "HumanEval/21", "keyWords": "\u00c9tant donn\u00e9 une liste de nombres (contenant au moins deux \u00e9l\u00e9ments), une transformation lin\u00e9aire est appliqu\u00e9e \u00e0 cette liste. Le plus petit nombre est 0 et le plus grand est 1\n"}
{"task_id": "HumanEval/22", "keyWords": "Filtrer une liste donn\u00e9e de valeurs python, uniquement pour les entiers\n"}
{"task_id": "HumanEval/23", "keyWords": "Retourne la longueur d\u2019une cha\u00eene donn\u00e9e\n"}
{"task_id": "HumanEval/24", "keyWords": "Pour un nombre donn\u00e9 n, trouver le plus grand nombre inf\u00e9rieur \u00e0 n qui peut diviser n\n"}
{"task_id": "HumanEval/25", "keyWords": "Retourne la liste des facteurs premiers d\u2019un entier donn\u00e9, dans l\u2019ordre du plus petit au plus grand. Chaque facteur doit \u00eatre list\u00e9 autant de fois qu\u2019il appara\u00eet dans la d\u00e9composition. Le nombre d\u2019entr\u00e9e doit \u00eatre \u00e9gal au produit de tous les facteurs\n"}
{"task_id": "HumanEval/26", "keyWords": "Dans la liste des entiers, supprimez tous les \u00e9l\u00e9ments qui apparaissent plus d\u2019une fois. Gardez les \u00e9l\u00e9ments restants dans le m\u00eame ordre que dans l\u2019entr\u00e9e.\n"}
{"task_id": "HumanEval/27", "keyWords": "Pour une cha\u00eene donn\u00e9e, convertir les caract\u00e8res minuscules en majuscules et les caract\u00e8res majuscules en minuscules.\n"}
{"task_id": "HumanEval/28", "keyWords": "Concat\u00e9ner une liste de cha\u00eenes en une seule cha\u00eene\n"}
{"task_id": "HumanEval/29", "keyWords": "Filtrer la liste des entr\u00e9es uniquement pour les cha\u00eenes commen\u00e7ant par un pr\u00e9fixe donn\u00e9.\n"}
{"task_id": "HumanEval/30", "keyWords": "Retourne uniquement les nombres positifs de la liste.\n"}
{"task_id": "HumanEval/31", "keyWords": "Retourne true si le nombre donn\u00e9 est premier, false sinon.\n"}
{"task_id": "HumanEval/32", "keyWords": "xs est le coefficient du polyn\u00f4me. Find_zero trouve x tel que poly(x) = 0. Find_zero retourne simplement 0 points, m\u00eame s\u2019il y en a beaucoup. De plus, find_zero n\u2019accepte que la liste xs qui a un nombre pair de coefficients et dont le plus grand est diff\u00e9rent de z\u00e9ro, car il garantit qu\u2019il y a une solution.\n"}
{"task_id": "HumanEval/33", "keyWords": "Cette fonction prend une liste l et retourne une liste l. L est \u00e9gal \u00e0 l sur un indice non divisible par 3, et sa valeur sur un indice divisible par 3 est le r\u00e9sultat du tri croissant de toutes les valeurs sur l\u2019index correspondant \u00e0 l.\n"}
{"task_id": "HumanEval/34", "keyWords": "Retourne un \u00e9l\u00e9ment unique de la liste et le trie\n"}
{"task_id": "HumanEval/35", "keyWords": "Retourne le plus grand \u00e9l\u00e9ment de la liste.\n"}
{"task_id": "HumanEval/36", "keyWords": "Retourne le nombre de fois o\u00f9 le chiffre 7 appara\u00eet dans un entier inf\u00e9rieur \u00e0 n et divisible par 11 ou 13.\n"}
{"task_id": "HumanEval/37", "keyWords": "Cette fonction prend une liste l et retourne une liste l, de sorte que\nL est \u00e9gal \u00e0 l sur les termes impaires, tandis que sa valeur sur les termes pairs est la valeur correspondante de l apr\u00e8s ordre croissant de la valeur de l\u2019index pair.\n"}
{"task_id": "HumanEval/38", "keyWords": "La cha\u00eene cod\u00e9e avec la fonction encode_cyclic est utilis\u00e9e comme cha\u00eene d\u2019entr\u00e9e. Retourne la cha\u00eene d\u00e9cod\u00e9e.\n"}
{"task_id": "HumanEval/39", "keyWords": "\nPrime_fib retourne le n-i\u00e8me premier du nombre de fibonacci.\n"}
{"task_id": "HumanEval/40", "keyWords": "\nTriples_sum_to_zero accepte comme entr\u00e9e une liste d\u2019entiers.\nRetourne true si la somme de trois \u00e9l\u00e9ments diff\u00e9rents dans la liste est nulle, False dans le cas contraire.\n\n"}
{"task_id": "HumanEval/41", "keyWords": "\nImaginez un chemin infiniment long, parfaitement droit. N voitures roulent de gauche \u00e0 droite; En m\u00eame temps, un autre groupe de n voitures roule de droite \u00e0 gauche. Les deux groupes de wagons sont d\u2019abord tr\u00e8s \u00e9loign\u00e9s l\u2019un de l\u2019autre. Toutes les voitures roulent \u00e0 la m\u00eame vitesse. Lorsqu\u2019un v\u00e9hicule roulant de gauche \u00e0 droite heurte un v\u00e9hicule roulant de droite \u00e0 gauche, on consid\u00e8re que les deux v\u00e9hicules sont entr\u00e9s en collision. Cependant, la voiture est infiniment solide et puissante; Ils ont donc continu\u00e9 \u00e0 se d\u00e9placer sur leur trajectoire comme s\u2019ils n\u2019\u00e9taient pas entr\u00e9s en collision.\n\nCette fonction affiche le nombre de ces collisions.\n"}
{"task_id": "HumanEval/42", "keyWords": "Retourne la liste des \u00e9l\u00e9ments plus 1.\n"}
{"task_id": "HumanEval/43", "keyWords": "\nPairs_sum_to_zero accepte comme entr\u00e9e une liste d\u2019entiers. Retourne True s\u2019il y a deux \u00e9l\u00e9ments diff\u00e9rents dans la liste dont la somme est nulle, False sinon.\n"}
{"task_id": "HumanEval/44", "keyWords": "Changez le nombre d\u2019entr\u00e9e x pour une repr\u00e9sentation de base. Retourne une repr\u00e9sentation de cha\u00eene apr\u00e8s la conversion. Base inf\u00e9rieure \u00e0 10.\n"}
{"task_id": "HumanEval/45", "keyWords": "\u00c9tant donn\u00e9 la longueur des c\u00f4t\u00e9s du triangle et l\u2019aire de retour \u00e9lev\u00e9e.\n"}
{"task_id": "HumanEval/46", "keyWords": "La suite Fib4 est une suite similaire \u00e0 la suite Fibonacci. Elle est d\u00e9finie comme suit:\nfib4 (0) -> 0\nfib4 (1) -> 0\nfib4 (2) -> 2\nfib4 (3) -> 0\nfib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\nVeuillez \u00e9crire une fonction pour calculer efficacement le n-i\u00e8me \u00e9l\u00e9ment de la s\u00e9quence fib4. N\u2019utilisez pas la r\u00e9cursivit\u00e9.\n"}
{"task_id": "HumanEval/47", "keyWords": "Retourne la m\u00e9diane des \u00e9l\u00e9ments de la liste l.\n"}
{"task_id": "HumanEval/48", "keyWords": "\nV\u00e9rifier si une cha\u00eene donn\u00e9e est un palindrome\n"}
{"task_id": "HumanEval/49", "keyWords": "Retourne 2^n module p(attention au nombre).\n"}
{"task_id": "HumanEval/50", "keyWords": "Une cha\u00eene cod\u00e9e avec la fonction encode_shift comme entr\u00e9e. Retourne la cha\u00eene d\u00e9cod\u00e9e.\n"}
{"task_id": "HumanEval/51", "keyWords": "\nRemove_vowels est une fonction qui prend une cha\u00eene et retourne une cha\u00eene sans voyelle.\n"}
{"task_id": "HumanEval/52", "keyWords": "Retourne vrai si tous les nombres de la liste l sont inf\u00e9rieurs au seuil t.\n"}
{"task_id": "HumanEval/53", "keyWords": "Addition de deux nombres x et y\n"}
{"task_id": "HumanEval/54", "keyWords": "\nV\u00e9rifiez que les deux mots ont les m\u00eames caract\u00e8res.\n"}
{"task_id": "HumanEval/55", "keyWords": "Retourne le n-i\u00e8me nombre de fibonacci.\n"}
{"task_id": "HumanEval/56", "keyWords": "Les parenth\u00e8ses sont une cha\u00eene de \"<\" et \">\". Retourne vrai si chaque parenth\u00e8se gauche a une parenth\u00e8se droite correspondante.\n\n"}
{"task_id": "HumanEval/57", "keyWords": "Retourne True si l\u2019\u00e9l\u00e9ment de la liste augmente ou diminue monotone.\n"}
{"task_id": "HumanEval/58", "keyWords": "Retourne le seul \u00e9l\u00e9ment commun tri\u00e9 des deux listes.\n"}
{"task_id": "HumanEval/59", "keyWords": "Retourne le plus grand facteur premier de n. Supposons que n > 1 et n\u2019est pas premier.\n"}
{"task_id": "HumanEval/60", "keyWords": "Sum_to_n est une fonction qui somme de 1 \u00e0 n.\n"}
{"task_id": "HumanEval/61", "keyWords": "Les parenth\u00e8ses sont des cha\u00eenes de caract\u00e8res de \"(\" et\") \". Retourne vrai si chaque parenth\u00e8se gauche a une parenth\u00e8se droite correspondante.\n\n"}
{"task_id": "HumanEval/62", "keyWords": "Xs repr\u00e9sente les coefficients du polyn\u00f4me. xs[0] + xs[1] * x + xs[2] * x^2 + .... Retourne la d\u00e9riv\u00e9e de ce polyn\u00f4me de la m\u00eame mani\u00e8re.\n"}
{"task_id": "HumanEval/63", "keyWords": "La suite fibfib est une suite similaire \u00e0 la suite fibonacci. Elle est d\u00e9finie comme suit:\nfibfib (0) == 0\nfib(1) == 0\nfib(2) == 1\nfibfib(n) == fibfib(n-1) + fibfib(n-2) +        fibfib(n-3).\nVeuillez \u00e9crire une fonction pour calculer efficacement le n-i\u00e8me \u00e9l\u00e9ment de la suite fibfib.\n"}
{"task_id": "HumanEval/64", "keyWords": "\u00e9crit une fonction vowels_count qui prend une repr\u00e9sentation de cha\u00eene, prend un mot comme entr\u00e9e et retourne le nombre de voyelles dans la cha\u00eene.\nDans ce cas, les voyelles sont \"a\", \"E\", \"i\", \"O\", \"u\". Ici aussi, \u00aby\u00bb est une voyelle, mais seulement si elle se trouve \u00e0 la fin d\u2019un mot donn\u00e9.\n"}
{"task_id": "HumanEval/65", "keyWords": "D\u00e9calage cyclique des chiffres de l\u2019entier x, d\u00e9calage vers la droite et retourne le r\u00e9sultat comme une cha\u00eene de caract\u00e8res. Si shift > nombre de chiffres, le nombre de chiffres invers\u00e9s est retourn\u00e9.\n"}
{"task_id": "HumanEval/66", "keyWords": "Le mandat\nEcrire une fonction qui prend une cha\u00eene en entr\u00e9e et ne retourne que la somme ASCII de gros caract\u00e8res.\n\n"}
{"task_id": "HumanEval/67", "keyWords": "\nDans cette t\u00e2che, vous obtiendrez une cha\u00eene repr\u00e9sentant le nombre de pommes et d\u2019oranges. Ils sont r\u00e9partis dans un panier de fruits. Ce panier contient des pommes, des oranges et des mangues. \u00c9tant donn\u00e9 une cha\u00eene repr\u00e9sentant le nombre total d\u2019oranges et de pommes et un nombre entier repr\u00e9sentant le nombre total de fruits, dans le panier retourne le nombre de mangues dans le panier.\nPar exemple:\nfruit_distribution(\"5 apples and 6 oranges\", 19) ->19 - 5 - 6 = 8\nfruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 - 1 = 2\nfruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 - 3 = 95\nfruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100 - 1 = 19\n"}
{"task_id": "HumanEval/68", "keyWords": "\n\"\u00c9tant donn\u00e9 un tableau repr\u00e9sentant une branche de l\u2019arbre avec un nombre entier non n\u00e9gatif de noeuds, votre t\u00e2che est de retirer un de ces noeuds et de le renvoyer. Le n\u0153ud choisi doit \u00eatre le plus petit n\u0153ud num\u00e9rique pair. Si plusieurs noeuds avec la m\u00eame valeur par minimum sont trouv\u00e9s, le noeud avec l\u2019index le plus bas est retourn\u00e9. Le noeud extrait doit \u00eatre retourn\u00e9 sous forme de liste, [valeur du couple minimum, son index],\nRetourne [] s\u2019il n\u2019y a pas de valeurs par ou si le tableau donn\u00e9 est vide.\nExemple 1:\nEntr\u00e9e: [4,2,3]\nSortie: [2, 1]\nExplication: 2 a la plus petite valeur par et 2 a la plus petite valeur d\u2019index.\n\nExemple 2:\nEntr\u00e9e: [1,2,3]\nSortie: [2, 1]\nExplication: 2 a la plus petite valeur par et 2 a la plus petite valeur d\u2019index.\n\nExemple 3:\nEntr\u00e9e: []\nSortie: []\n\nExemple 4:\nEntr\u00e9e: [5, 0, 3, 0, 4, 2]\nSortie: [0, 1]\nExplication: 0 est la valeur la plus petite, mais il y a deux 0, donc nous choisissons le premier 0 qui a l\u2019index le plus petit.\n\nLes limites:\n* 1 <= nombre de n\u0153uds <= 10000\n* 0 <= valeur du noeud\n"}
{"task_id": "HumanEval/69", "keyWords": "\nVous donne une liste d\u2019entiers positifs non vides. Retourne le plus grand entier sup\u00e9rieur \u00e0 z\u00e9ro\n, et la fr\u00e9quence est sup\u00e9rieure ou \u00e9gale \u00e0 la valeur de l\u2019entier lui-m\u00eame. La fr\u00e9quence d\u2019apparition d\u2019un entier est le nombre de fois qu\u2019il appara\u00eet dans la liste. Si elle n\u2019existe pas, -1 est retourn\u00e9.\nExemples de:\nsearch([4, 1, 2, 2, 3, 1]) == 2\nsearch([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3\nsearch([5, 5, 4, 4, 4]) == -1\n"}
{"task_id": "HumanEval/70", "keyWords": "\nDonn\u00e9 une liste d\u2019entiers, retourne la liste dans un ordre \u00e9trange. Le tri \u00e9trange, c\u2019est commencer par le minimum, puis par le maximum des entiers restants, puis par le minimum, et ainsi de suite.\n\nExemples de:\nstrange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\nstrange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\nstrange_sort_list([]) == []\n"}
{"task_id": "HumanEval/71", "keyWords": "\nDonn\u00e9e la longueur des trois c\u00f4t\u00e9s d\u2019un triangle. L\u2019aire retourn\u00e9e est arrondie \u00e0 deux d\u00e9cimales si les trois c\u00f4t\u00e9s forment un triangle valide. Sinon, elle retourne -1.\nLorsque la somme des deux c\u00f4t\u00e9s est sup\u00e9rieure au troisi\u00e8me, les trois c\u00f4t\u00e9s forment un triangle efficace.\n"}
{"task_id": "HumanEval/72", "keyWords": "\n\u00c9crire une fonction qui retourne True si l\u2019objet q va voler, False sinon. Un objet q vole s\u2019il est \u00e9quilibr\u00e9 (c\u2019est une liste palindrologique) et que la somme de ses \u00e9l\u00e9ments est inf\u00e9rieure ou \u00e9gale au poids maximum possible w.\n\nExemples de:\nwill_it_fly([1, 2], 5) \u279e False\n# 1+2 est inf\u00e9rieur au poids maximum possible, mais il est d\u00e9s\u00e9quilibr\u00e9.\n\nwill_it_fly([3, 2, 3], 1) \u279e False\n# il est \u00e9quilibr\u00e9 mais 3+2+3 d\u00e9passe le poids maximum possible.\n\nwill_it_fly([3, 2, 3], 9) \u279e True\n# 3+2+3 moins que le poids maximum possible, il est \u00e9quilibr\u00e9.\n\nwill_it_fly([3], 5) \u279e True\n# 3 moins que le poids maximum possible, il est \u00e9quilibr\u00e9.\n"}
{"task_id": "HumanEval/73", "keyWords": "\n\u00c9tant donn\u00e9 un tableau arr compos\u00e9 d\u2019entiers, trouver le nombre minimum de changements qui en font un tableau palindrologique. Un tableau palindrome est un tableau qui se lit de la m\u00eame mani\u00e8re avant et apr\u00e8s. En une seule modification, vous pouvez changer un \u00e9l\u00e9ment \u00e0 n\u2019importe quel autre \u00e9l\u00e9ment.\n\nPar exemple:\nSmallest_change ([1,2,3,5,4,7,9,6]) == 4\nsmallest_change([1, 2, 3, 4, 3, 2, 2]) == 1\nsmallest_change([1, 2, 3, 2, 1]) == 0\n"}
{"task_id": "HumanEval/74", "keyWords": "\nEcrivez une fonction qui prend deux listes de cha\u00eenes et retourne une liste dont le nombre total de caract\u00e8res de toutes les cha\u00eenes est inf\u00e9rieur au nombre total de caract\u00e8res de toutes les cha\u00eenes de l\u2019autre liste.\nSi toutes les cha\u00eenes des deux listes ont le m\u00eame nombre de caract\u00e8res, la premi\u00e8re liste est retourn\u00e9e.\nexemples\ntotal_match([], []) \u279e []\ntotal_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\ntotal_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n"}
{"task_id": "HumanEval/75", "keyWords": "\u00c9crire une fonction qui retourne true lorsque le nombre donn\u00e9 est le produit de 3 premiers\nSinon retourne false. Connu a est inf\u00e9rieur \u00e0 100.\nExemples de:\nis_multiply_prime(30) == True\n30 = 2 * 3 * 5\n"}
{"task_id": "HumanEval/76", "keyWords": "Votre t\u00e2che est d\u2019\u00e9crire une fonction. Si un nombre x est un\nLes puissances simples de n retournent vrai et faux dans les autres cas.\nX est une puissance simple de n si n**int= x\nPar exemple:\nis_simple_power(1, 4) => true\nis_simple_power(2, 2) => true\nis_simple_power(8, 2) => true\nis_simple_power(3, 2) => false\nis_simple_power(3, 1) => false\nis_simple_power(5, 3) => false\n"}
{"task_id": "HumanEval/77", "keyWords": "\n\u00c9crire une fonction qui prend un entier a comme entr\u00e9e et retourne vrai si cet entier est le cube d\u2019un certain nombre entier\nNote: vous pouvez supposer que la saisie est toujours valide.\nExemples de:\niscube(1) ==> True\niscube(2) ==> False\niscube(-1) ==> True\niscube(64) ==> True\niscube(0) ==> True\niscube(180) ==> False\n"}
{"task_id": "HumanEval/78", "keyWords": "On vous demande d\u2019\u00e9crire une fonction qui re\u00e7oit un nombre hexad\u00e9cimal comme une cha\u00eene de caract\u00e8res. Comptez le nombre de premiers (premiers sont les nombres naturels qui sont plus grands que 1 et qui ne sont pas le produit de deux plus petits nombres naturels) dans le nombre hexad\u00e9cimal entr\u00e9\nLes nombres hexad\u00e9cimaux sont 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\nLes nombres premiers sont 2, 3, 5, 7, 11, 13, 17,...\nVous devez donc d\u00e9terminer le nombre comme l\u2019un des nombres suivants :2,3,5,7, B(= 11 d\u00e9cimal), D(= 13 d\u00e9cimal).\nNote: vous pouvez supposer que l\u2019entr\u00e9e est toujours correcte ou une cha\u00eene vide. Les symboles A, B, C, D, E, F sont toujours majuscules.\nExemples de:\nPour num = \"AB\", la sortie devrait \u00eatre 1.\nPour num = \"1077E\", la sortie devrait \u00eatre 2.\nPour num = \"ABED1A33\", la sortie devrait \u00eatre 4.\nPour num = \"123456789ABCDEF0\", la sortie devrait \u00eatre 6.\nPour num = \"2020\", la sortie devrait \u00eatre 2.\n"}
{"task_id": "HumanEval/79", "keyWords": "Vous obtiendrez un nombre d\u00e9cimal. Votre t\u00e2che est de le convertir en\nLe format binaire. La fonction devrait renvoyer une cha\u00eene de caract\u00e8res, chaque caract\u00e8re repr\u00e9sentant un nombre binaire. Chaque caract\u00e8re dans la cha\u00eene sera \u20190\u2019 ou \u20191\u2019.\n\nIl y aura une paire de caract\u00e8res suppl\u00e9mentaires \u2019db\u2019 au d\u00e9but et \u00e0 la fin de la cha\u00eene.\nDes caract\u00e8res suppl\u00e9mentaires sont utilis\u00e9s pour aider \u00e0 ajuster le format.\nExemples de:\ndecimal_to_binary(15)   # returns \"db1111db\"\ndecimal_to_binary(32)   # returns \"db100000db\"\n"}
{"task_id": "HumanEval/80", "keyWords": "Vous donne une cha\u00eene S. Votre t\u00e2che est de v\u00e9rifier si la cha\u00eene est heureuse. Une cha\u00eene est heureuse si elle a au moins 3 de longueur et que chaque 3 lettres cons\u00e9cutives sont diff\u00e9rentes\nPar exemple:\nis_happy(a) => False\nis_happy(aa) => False\nis_happy(abcd) => True\nis_happy(aabb) => False\nis_happy(adb) => True\nis_happy(xyy) => False\n"}
{"task_id": "HumanEval/81", "keyWords": "C\u2019est la derni\u00e8re semaine du semestre et les enseignants doivent noter les \u00e9l\u00e8ves. Les enseignants ont d\u00e9velopp\u00e9 leurs propres algorithmes de notation. Le seul probl\u00e8me est qu\u2019elle a perdu le code qu\u2019elle a utilis\u00e9 pour noter. Elle vous donne une liste de GPA de quelques \u00e9tudiants. Vous allez \u00e9crire une fonction qui peut produire une liste de niveaux alphab\u00e9tiques en utilisant le tableau suivant:\nClasse GPA galil\u00e9ennes de lettres\n4,0 A +\n> 3,7 \u00e0\n> 3,3 A-\n> 3,0 B+\n> 2.7b > 2.7b\n> 2.3b -\n> 2,0 C+\n> 1.7 C\n> 1,3 C-\n> 1,0 D+\n> 0,7 D\n> 0,0 D-\n0,0 E\n\n\nExemples de:\nGrade_equation [4.0, 3, 17 et 2 350]) = > [\u2019 A + B \u2019, \u2019 C \u2019 \u2019 C \u2019 \u2019 A -.]\n"}
{"task_id": "HumanEval/82", "keyWords": "\u00c9crire une fonction qui re\u00e7oit une cha\u00eene de caract\u00e8res et retourne True si la longueur de la cha\u00eene est un nombre premier, False sinon\n"}
{"task_id": "HumanEval/83", "keyWords": "\nDonn\u00e9 un entier positif n, retourne un entier positif de n bits\nUne quantit\u00e9 qui commence ou se termine par 1.\n"}
{"task_id": "HumanEval/84", "keyWords": "Donn\u00e9 un entier positif N, retourne la repr\u00e9sentation binaire de la somme des nombres.\nexemples\nPour N = 1000, la somme des nombres est 1 et la sortie doit \u00eatre \"1\".\nPour N = 150, la somme des nombres sera 6 et la sortie devrait \u00eatre \"110\".\nPour N = 147 et la somme des nombres est 12, la sortie devrait \u00eatre \"1100\".\nLes variables:\n@n entier\nContraintes :0\u2264N\u226410000.\nLa sortie:\nUne cha\u00eene de nombres binaires\n"}
{"task_id": "HumanEval/85", "keyWords": "Donne une liste d\u2019entiers non vides. Additionner les \u00e9l\u00e9ments pairs index\u00e9s comme impair...\n\n\n"}
{"task_id": "HumanEval/86", "keyWords": "\n\u00c9crire une fonction qui prend une cha\u00eene et retourne sa version ordonn\u00e9e.\nLa version ordonn\u00e9e d\u2019une cha\u00eene, est une cha\u00eene dans laquelle tous les mots (s\u00e9par\u00e9s par des espaces) sont remplac\u00e9s par des mots dispos\u00e9s par tous leurs caract\u00e8res dans l\u2019ordre croissant de leur valeur ASCII.\nNote: vous devez conserver l\u2019ordre des mots et des espaces dans la phrase.\n\nPar exemple:\nanti_shuffle('Hi') returns 'Hi'\nanti_shuffle('hello') returns 'ehllo'\nanti_shuffle('Hello World!!! ') returns 'Hello !!! Wdlor'\n"}
{"task_id": "HumanEval/87", "keyWords": "\nVous avez une donn\u00e9e bidimensionnelle, une liste imbriqu\u00e9e, qui est similaire \u00e0 une matrice, mais contrairement \u00e0 une matrice, chaque ligne peut contenir un nombre diff\u00e9rent de colonnes. \u00c9tant donn\u00e9 la liste et l\u2019entier x, trouver l\u2019entier x dans la liste, retourne la liste des tuples, [(x1, y1), (x2, y2)...] , o\u00f9 chaque tuple est une coordonn\u00e9e -(ligne, colonne), \u00e0 partir de 0.\nTrier initialement les coordonn\u00e9es par ordre croissant de rang\u00e9es.\nDe plus, les coordonn\u00e9es des lignes sont tri\u00e9es dans l\u2019ordre d\u00e9croissant des colonnes.\n\nPar exemple:\nget_row([\n[,] doit \u00eatre int\u00e9gr\u00e9e dans l\u2019accord,\n[1,2,3,4,1,6] doit \u00eatre int\u00e9gr\u00e9e dans l\u2019accord,\n[1,2,3,4,5,1]\n], 1) == [(0, 0), (1, 4), (1, 0), (2, 5), (2, 0)]\nget_row([], 1) == []\nget_row([[], [1], [1, 2, 3]], 3) == [(2, 2)]\n"}
{"task_id": "HumanEval/88", "keyWords": "\nDonn\u00e9 un tableau d\u2019entiers non n\u00e9gatifs, retourne une copie du tableau donn\u00e9 tri\u00e9; Trier le tableau donn\u00e9 dans l\u2019ordre croissant si (la premi\u00e8re valeur d\u2019index, la derni\u00e8re valeur d\u2019index) et sont impaires; Si (la premi\u00e8re valeur d\u2019index, la derni\u00e8re valeur d\u2019index) est paire, le tableau donn\u00e9 est tri\u00e9 dans l\u2019ordre d\u00e9croissant.\n\nA noter:\n* ne modifie pas le tableau donn\u00e9.\n\n"}
{"task_id": "HumanEval/89", "keyWords": "Cr\u00e9er une fonction encrypt qui prend une cha\u00eene comme argument,\nEn tournant l\u2019alphabet, une cha\u00eene crypt\u00e9e est retourn\u00e9e. L\u2019alphabet doit \u00eatre tourn\u00e9 de telle sorte que ces lettres se d\u00e9placent 2 x 2 positions vers le bas.\n"}
{"task_id": "HumanEval/90", "keyWords": "\nVous donne une liste d\u2019entiers. \u00c9crire une fonction next_smallest() qui renvoie le deuxi\u00e8me \u00e9l\u00e9ment le plus petit de la liste.\nS\u2019il n\u2019y a pas un tel \u00e9l\u00e9ment, retourne None.\n\nnext_smallest([1, 2, 3, 4, 5]) == 2\nnext_smallest([5, 1, 4, 3, 2]) == 2\nnext_smallest([]) == None\nnext_smallest([1, 1]) == None\n"}
{"task_id": "HumanEval/91", "keyWords": "\nVous donner une liste de mots. Votre t\u00e2che est de compter les nombres ennuyeux. L\u2019ennui est une phrase qui commence par un \"I\". Phrases avec \u2019. \u2019, \u2019? \u00abOu\u00bb! \u2019 la s\u00e9paration.\n\nPar exemple:\n"}
{"task_id": "HumanEval/92", "keyWords": "\nCr\u00e9e une fonction qui accepte 3 nombres. Retourne vrai si l\u2019un des nombres est \u00e9gal \u00e0 la somme des deux autres nombres et que tous les nombres sont des entiers. Retourne false dans tous les autres cas.\n\nexemples\nany_int(5, 2, 7) \u279e True\n\nany_int(3, 2, 2) \u279e False\n\nany_int(3, -2, 1) \u279e True\n\nAny_int (3.6, -2.2, 2) \u279e faux\n\n\n\n"}
{"task_id": "HumanEval/93", "keyWords": "\nEcrire une fonction qui accepte le message et l\u2019encoder de telle mani\u00e8re que toutes les lettres soient \u00e9chang\u00e9es contre les majuscules et les minuscules, que toutes les voyelles qui apparaissent dans le message soient remplac\u00e9es par les deux premi\u00e8res lettres de la position correspondante de la lettre dans l\u2019alphabet anglais\nSupposons qu\u2019il n\u2019y ait que des lettres.\n\nExemples de:\n"}
{"task_id": "HumanEval/94", "keyWords": "Vous donne une liste d\u2019entiers. Vous devez trouver le plus grand nombre premier et retourner la somme de ses chiffres.\n\nExemples de:\nFor parti-culier = 10 [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the fin devrait \u00eatre\nFor parti-culier = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the fin devrait \u00eatre de 25\nFor parti-culier = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3] the fin devrait \u00eatre 13\nFor parti-culier = 11 [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the fin devrait \u00eatre\nPour LST = [0,81,12,3,1,21] la sortie devrait \u00eatre 3\nPour LST = [0,8,1,2,1,7] la sortie devrait \u00eatre 7\n"}
{"task_id": "HumanEval/95", "keyWords": "\nPour un dictionnaire donn\u00e9, retourne True si toutes les cl\u00e9s sont des cha\u00eenes en minuscules, False si toutes les cl\u00e9s sont des cha\u00eenes en majuscules, sinon retourne False. Cette fonction devrait renvoyer False si le dictionnaire donn\u00e9 est vide.\nExemples de:\ncheck_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\ncheck_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\ncheck_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return False.\ncheck_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\ncheck_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n"}
{"task_id": "HumanEval/96", "keyWords": "Impl\u00e9mente une fonction qui prend un entier non n\u00e9gatif et retourne une liste d\u2019entiers premiers inf\u00e9rieurs \u00e0 n.\nPar exemple:\nCount_up_to (5) => [2,3]\nCount_up_to (11) => [2,3,5,7]\ncount_up_to(0) => []\nCount_up_to (20) => [2,3,5,7,11,13,17,19]\ncount_up_to(1) => []\nCount_up_to (18) => [2,3,5,7,11,13,17]\n"}
{"task_id": "HumanEval/97", "keyWords": "Compl\u00e8te une fonction qui prend deux entiers comme argument et retourne leur produit \u00e0 un seul chiffre. Supposons que l\u2019entr\u00e9e est toujours valide.\nExemples de:\nmultiply(148, 412) should return 16.\nmultiply(19, 28) should return 72.\nmultiply(2020, 1851) should return 0.\nmultiply(14,-15) should return 20.\n"}
{"task_id": "HumanEval/98", "keyWords": "\n\u00c9tant donn\u00e9 la cha\u00eene S, comptez le nombre de voyelles majuscules dans l\u2019index pair.\n\nPar exemple:\ncount_upper('aBCdEf') returns 1\ncount_upper('abcdefg') returns 0\ncount_upper('dBBE') returns 0\n"}
{"task_id": "HumanEval/99", "keyWords": "\nCr\u00e9e une fonction qui prend une valeur (cha\u00eene) repr\u00e9sentant un nombre et retourne l\u2019entier le plus proche. Si ce nombre est \u00e9gal \u00e0 deux entiers, on prend un entier de 0.\n\nexemples\n"}
{"task_id": "HumanEval/100", "keyWords": "\n\u00c9tant donn\u00e9 un entier positif n, vous devez faire un tas de pierres de n couches. N pierres au premier niveau. Le nombre de pierres pour le niveau suivant est:\n- si n est impair, le prochain nombre impair.\n- si n est pair, le prochain nombre pair.\nRetourne le nombre de pierres pour chaque niveau de la liste, o\u00f9 l\u2019\u00e9l\u00e9ment i \u00e0 la position index repr\u00e9sente le nombre de pierres dans le niveau (i +1).\nExemples de:\n"}
{"task_id": "HumanEval/101", "keyWords": "\nVous obtiendrez une liste de mots s\u00e9par\u00e9s par des virgules ou des espaces. Votre mission est\nDivise une cha\u00eene en mots et retourne un tableau de mots.\n\nPar exemple:\nwords_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nwords_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n"}
{"task_id": "HumanEval/102", "keyWords": "Cette fonction prend deux nombres positifs x et y et retourne le plus grand nombre pair dans l\u2019intervalle [x, y]. S\u2019il n\u2019y a pas de tel nombre, alors la fonction devrait renvoyer -1.\n\nPar exemple:\nchoose_num(12, 15) = 14\nchoose_num(13, 12) = -1\n"}
{"task_id": "HumanEval/103", "keyWords": "En vous donnant deux entiers positifs n et m, votre t\u00e2che est de calculer la moyenne des entiers de n \u00e0 m (y compris n et m). Arrondissez la r\u00e9ponse au nombre entier le plus proche et convertez-la en binaire. Retourne -1 si n est sup\u00e9rieur \u00e0 m.\n"}
{"task_id": "HumanEval/104", "keyWords": "Donn\u00e9 une liste d\u2019entiers positifs x, retourne une liste ordonn\u00e9e de tous les \u00e9l\u00e9ments sans nombre pair.\n\nNote: la liste retourn\u00e9e doit \u00eatre tri\u00e9e par ordre croissant.\n\nPar exemple:\n"}
{"task_id": "HumanEval/105", "keyWords": "\n\u00c9tant donn\u00e9 un tableau d\u2019entiers, triez les entiers entre 1 et 9. Inversez le tableau et remplacez chaque nombre par le nom correspondant \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\nPar exemple:\narr = [2, 1, 1, 4, 5, 8, 2, 3]\n-> sort arr -> [1, 1, 2, 2, 3, 4, 5, 8]\n-> reverse arr -> [8, 5, 4, 3, 2, 2, 1, 1]\nreturn [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"]\n\nRetourne un tableau vide s\u2019il est vide:\narr = []\nreturn []\n\nS\u2019il y a des nombres \u00e9tranges dans le tableau, ignorez-le:\narr = [1, -1 , 55]\n-> sort arr -> [-1, 1, 55]\n-> reverse arr -> [55, 1, -1]\nreturn = ['One']\n"}
{"task_id": "HumanEval/106", "keyWords": "Impl\u00e9menter une fonction f avec n comme argument, retourne une liste de taille n telle que la valeur d\u2019un \u00e9l\u00e9ment dont l\u2019index est i, si i est pair, est la factorielle de i, sinon est la somme des nombres de 1 \u00e0 i. I commence par 1.\nLa factorielle de i est la multiplication des nombres de 1 \u00e0 i (1 * 2 *... * i).\nPar exemple:\nf(5) == [1, 2, 6, 24, 15]\n"}
{"task_id": "HumanEval/107", "keyWords": "\n\u00c9tant donn\u00e9 un entier positif n, retourne un tuple, enregistr\u00e9 dans l\u2019intervalle (1,n), contenant le nombre de palindromes pair et impair, l\u2019intervalle contenant les limites.\n\nExemple 1:\n\nEntr\u00e9es: 3 entr\u00e9es\nSortie: (1, 2)\nExplication de:\nLe palindrome entier est 1,2,3. L\u2019un d\u2019entre eux est pair et deux sont impaires.\n\nExemple 2:\n\nEntr\u00e9es: 12 entr\u00e9es\nSorties: (4, 6)\nExplication de:\nLes palindromes entiers sont 1, 2, 3, 4, 5, 6, 7, 8, 9, 11. Quatre d\u2019entre eux sont pairs et six sont impaires.\n\nA noter:\n1. 1 <= n <= 10^3\n2. Le tuple retourn\u00e9 contient respectivement le nombre de palindromes entiers paires et impaires.\n"}
{"task_id": "HumanEval/108", "keyWords": "\n\u00c9crire une fonction count_nums qui prend un tableau d\u2019entiers et retourne\nNombre d\u2019\u00e9l\u00e9ments dont la somme des nombres est sup\u00e9rieure \u00e0 0.\nSi un nombre est n\u00e9gatif, son premier chiffre sign\u00e9 sera n\u00e9gatif:\nPar exemple -123 les nombres sign\u00e9s sont -1, 2 et 3.\n"}
{"task_id": "HumanEval/109", "keyWords": "Nous avons un ensemble de N entiers arr[1], arr[2],... , tableau arr de arr[N]. Les nombres dans le tableau seront tri\u00e9s au hasard. Votre t\u00e2che est de d\u00e9terminer si vous pouvez trier un tableau dans un ordre non d\u00e9croissant. Pour un tableau donn\u00e9, effectuez les op\u00e9rations suivantes:\nVous pouvez effectuer le d\u00e9placement vers la droite autant de fois que vous le souhaitez.\n\nUne op\u00e9ration de d\u00e9placement vers la droite signifie d\u00e9placer tous les \u00e9l\u00e9ments du tableau d\u2019une position vers la droite. Le dernier \u00e9l\u00e9ment du tableau sera d\u00e9plac\u00e9 \u00e0 la position de d\u00e9part du tableau, c\u2019est-\u00e0-dire \u00e0 l\u2019index 0.\n\nRetourne True si le tableau de tri peut \u00eatre obtenu en effectuant les op\u00e9rations ci-dessus, sinon retourne False. Retourne True si le tableau donn\u00e9 est vide.\n\nNote: la liste donn\u00e9e est garantie d\u2019avoir des \u00e9l\u00e9ments uniques.\n\n"}
{"task_id": "HumanEval/110", "keyWords": "Dans ce probl\u00e8me, vous allez impl\u00e9menter une fonction qui prend deux listes de nombres et d\u00e9termine si un \u00e9change d\u2019\u00e9l\u00e9ments est possible\nFait de lst1 une liste qui n\u2019a que des nombres pairs. Il n\u2019y a pas de limite au nombre d\u2019\u00e9l\u00e9ments \u00e9chang\u00e9s entre lst1 et lst2. Retourne \"YES\" si tous les \u00e9l\u00e9ments de lst1 sont pairs en \u00e9changeant des \u00e9l\u00e9ments entre lst1 et lst2. Sinon, \"NO\" est retourn\u00e9.\nPar exemple:\nexchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\nexchange([1, 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\nSupposons que la liste d\u2019entr\u00e9e n\u2019est pas vide.\n"}
{"task_id": "HumanEval/111", "keyWords": "Une cha\u00eene de lettres en minuscules s\u00e9par\u00e9es par un espace renvoie un dictionnaire des lettres les plus r\u00e9p\u00e9t\u00e9es et leur nombre d\u2019occurrences correspondant.\nSi plusieurs lettres ont la m\u00eame occurrence, toutes les lettres et leurs occurrences sont retourn\u00e9es.\n\nExemples de:\nhistogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\nhistogram('a b b a') == {'a': 2, 'b': 2}\nhistogram('a b c a b') == {'a': 2, 'b': 2}\nhistogram('b b b b a') == {'b': 4}\nhistogram('') == {}\n\n"}
{"task_id": "HumanEval/112", "keyWords": "\"T\u00e2che: nous avons deux cha\u00eenes S et c, vous devez supprimer tous les caract\u00e8res de S qui sont \u00e9gaux \u00e0 n\u2019importe quel caract\u00e8re de c\nV\u00e9rifiez ensuite si la cha\u00eene r\u00e9sultante est un palindrome. Une cha\u00eene est appel\u00e9e un palindrome si elle est lue de la m\u00eame mani\u00e8re avant et apr\u00e8s.\nVous devriez retourner un tuple contenant la cha\u00eene de r\u00e9sultat et la v\u00e9rification True/False.\nexemples\nPour S = \"abcde\", c = \"ae\", le r\u00e9sultat retourn\u00e9 est (\u2019bcd\u2019,False)\nPour S = \"abcdef\", c = \"b\" retourne le r\u00e9sultat (\u2019acdef\u2019,False)\nPour S = \"abcdedcba\", c = \"ab\", le r\u00e9sultat retourn\u00e9 est (\u2019cdedc\u2019,True)\n"}
{"task_id": "HumanEval/113", "keyWords": "\u00c9tant donn\u00e9 une liste de cha\u00eenes dont chacune est compos\u00e9e uniquement de chiffres, une liste est retourn\u00e9e. Chaque \u00e9l\u00e9ment i dans le r\u00e9sultat de sortie doit \u00eatre \"le nombre d\u2019\u00e9l\u00e9ments odd dans la cha\u00eene i de l\u2019entr\u00e9e.\" o\u00f9 tous les i doivent \u00eatre remplac\u00e9s par le nombre de nombres impairs dans la i-\u00e8me cha\u00eene d\u2019entr\u00e9e.\n\n"}
{"task_id": "HumanEval/114", "keyWords": "\n\u00c9tant donn\u00e9 un tableau entier nums, trouver la plus petite somme de tout sous-tableau non vide.\nexemples\nminSubArraySum([2, 3, 4, 1, 2, 4]) == 1\nminSubArraySum([-1, -2, -3]) == -6\n"}
{"task_id": "HumanEval/115", "keyWords": "\nVous donne une grille rectangulaire de grille de puits. Chaque rang\u00e9e repr\u00e9sente un puits et chaque 1 dans une rang\u00e9e repr\u00e9sente une unit\u00e9 d\u2019eau. Chaque puits a un seau correspondant qui peut \u00eatre utilis\u00e9 pour puiser de l\u2019eau. Tous les seaux ont la m\u00eame capacit\u00e9 de volume. Votre t\u00e2che est de vider le puits avec un seau. Produit le nombre de fois que le baril doit \u00eatre abaiss\u00e9.\n\nExemple 1:\nEn entr\u00e9e:\nGrille: [[0,0,1,0], [0,1,0,0], [1,1,1,1]]\nCapacit\u00e9 du seau: 1\nSorties: 6\n\nExemple 2:\nEn entr\u00e9e:\nGrille: [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\nCapacit\u00e9 du seau: 2\nSorties: 5\n\nExemple 3:\nEn entr\u00e9e:\nGrille: [[0,0,0], [0,0,0]]\nCapacit\u00e9 du seau: 5\nSortie: 0\n\nLes contraintes:\n* tous les puits ont la m\u00eame longueur\n* 1 <= grid.length <= 10^2\n* 1 <= grid[:,1].length <= 10^2\n* grid[i][j] -> 0 | 1\n* 1 <= capacity <= 10\n"}
{"task_id": "HumanEval/116", "keyWords": "\nDans cette kata, vous devez trier un tableau d\u2019entiers non n\u00e9gatifs en ordre croissant selon le nombre de 1 dans la repr\u00e9sentation binaire de ces nombres.\nPour un nombre similaire de 1, le tri est bas\u00e9 sur la valeur d\u00e9cimale.\n\nIl doit \u00eatre ex\u00e9cut\u00e9 comme suit:\n"}
{"task_id": "HumanEval/117", "keyWords": "\u00c9tant donn\u00e9 une cha\u00eene S et un nombre naturel n, votre t\u00e2che est d\u2019impl\u00e9menter une fonction qui renvoie une liste de tous les mots de la cha\u00eene S contenant n consonnes, selon l\u2019ordre dans lequel ces mots apparaissent dans la cha\u00eene S. Si la cha\u00eene S est vide, la fonction devrait renvoyer une liste vide.\nNote: vous pouvez supposer que la cha\u00eene d\u2019entr\u00e9e ne contient que des lettres et des espaces.\nExemples de:\nselect_words(\"Mary had a little lamb\", 4) ==> [\"little\"]\nselect_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\nselect_words(\"simple white space\", 2) ==> []\nselect_words(\"Hello world\", 4) ==> [\"world\"]\nselect_words(\"Uncle sam\", 3) ==> [\"Uncle\"]\n"}
{"task_id": "HumanEval/118", "keyWords": "Un mot pour vous. Votre t\u00e2che est de trouver la voyelle dont le centre est le plus proche du c\u00f4t\u00e9 droit du mot et au milieu des deux consonnes. Les voyelles du d\u00e9but et de la fin ne comptent pas. Retourne une cha\u00eene vide si aucune voyelle ne r\u00e9pond aux crit\u00e8res ci-dessus\nVous pouvez supposer que la cha\u00eene donn\u00e9e ne contient que des lettres anglaises.\n\nExemples de:\nget_closest_vowel(\"yogurt\") ==> \"u\"\nget_closest_vowel(\"FULL\") ==> \"U\"\nget_closest_vowel(\"quick\") ==> \"\"\nget_closest_vowel(\"ab\") ==> \"\"\n"}
{"task_id": "HumanEval/119", "keyWords": "\n\u00c9tant donn\u00e9 une liste contenant deux cha\u00eenes, les deux cha\u00eenes ne contiennent que des parenth\u00e8ses ouvertes \u2019 (\u2019 ou des parenth\u00e8ses ferm\u00e9es \u2019) \u2019. Votre travail est de v\u00e9rifier s\u2019il est possible de concat\u00e9ner deux cha\u00eenes par un certain ordre de sorte que la cha\u00eene r\u00e9sultante soit bonne. Une cha\u00eene S est consid\u00e9r\u00e9e comme bonne si et seulement si toutes les parenth\u00e8ses en S sont \u00e9quilibr\u00e9es. Par exemple: la cha\u00eene \u2019 (())() \u2019 est bonne, alors que la cha\u00eene \u2019 ()) \u2019 ne l\u2019est pas. Retourne \u2019oui\u2019 s\u2019il y a un moyen de g\u00e9n\u00e9rer une bonne cha\u00eene, \u2019no\u2019 dans le cas contraire.\n\nExemples de:\nmatch_parens(['()(', ')']) == 'Yes'\nmatch_parens([')', ')']) == 'No'\n"}
{"task_id": "HumanEval/120", "keyWords": "\n\u00c9tant donn\u00e9 un tableau d\u2019entiers arr et un entier positif k, retourne une liste tri\u00e9e de longueur k contenant les k plus grands nombres de l\u2019arr.\n\nExemple 1:\n\nEntr\u00e9e: arr = [-3, -4, 5], k = 3\nSortie: [-4, -3, 5]\n\nExemple 2:\n\nEntr\u00e9e: arr = [4, -4, 4], k = 2\nSortie: [4, 4]\n\nExemple 3:\n\nEntr\u00e9e: arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\nSortie: [2]\n\nA noter:\n1. La longueur du tableau sera \u00e0 [1, 1000].\n2. Les \u00e9l\u00e9ments du tableau seront dans [-1000, 1000].\n3. 0 <= k <= len(arr)\n"}
{"task_id": "HumanEval/121", "keyWords": "\u00c9tant donn\u00e9 une liste d\u2019entiers non vides, retourne la somme de tous les \u00e9l\u00e9ments impaires \u00e0 la position paire.\n\nexemples\nsolution([5, 8, 7, 1]) ==> 12\nsolution([3, 3, 3, 3, 3]) ==> 9\nsolution([30, 13, 24, 321]) ==>0\n"}
{"task_id": "HumanEval/122", "keyWords": "\n\u00c9tant donn\u00e9 un tableau non vide arr contenant des entiers et un entier k, retourne la somme des \u00e9l\u00e9ments avec au maximum deux chiffres parmi les k premiers \u00e9l\u00e9ments de arr.\nExemples de:\n\nEntr\u00e9e: arr = [111,21,3,4000,5,6,7,8,9], k = 4\nSortie: 24 # somme de 21 + 3\n\nLes contraintes:\n1. 1 <= len(arr) <= 100\n2. 1 <= k <= len(arr)\n"}
{"task_id": "HumanEval/123", "keyWords": "\n\u00c9tant donn\u00e9 un entier positif n, retourne une liste tri\u00e9e o\u00f9 les nombres impaires sont class\u00e9s par s\u00e9quence de collatz. La conjecture de Collatz est une conjecture en math\u00e9matiques sur les s\u00e9quences, d\u00e9finie comme suit: \u00e0 partir de tout entier positif n, chaque terme est obtenu par le terme pr\u00e9c\u00e9dent comme suit: si le terme pr\u00e9c\u00e9dent est pair, le terme suivant est la moiti\u00e9 du terme pr\u00e9c\u00e9dent. Si le pr\u00e9c\u00e9dent est impair, le prochain est 3 fois le pr\u00e9c\u00e9dent + 1. La conjecture est que la suite est toujours \u00e9gale \u00e0 1 quelle que soit la valeur de n.\n\nA noter:\n1. Collatz(1) is [1].\n2. Retourne la liste tri\u00e9e par ordre croissant.\n\nPar exemple:\nGet_odd_collatz (5) retourne la s\u00e9quence collatz [1, 5] # 5 est [5, 16, 8, 4, 2, 1], de sorte que les nombres impaires ne sont que 1 et 5.\n"}
{"task_id": "HumanEval/124", "keyWords": "Vous devez \u00e9crire une fonction qui v\u00e9rifie la cha\u00eene de date donn\u00e9e et retourne True si la date est valide, False sinon. Valable \u00e0 la date si les conditions suivantes sont remplies:\n1. La cha\u00eene de date n\u2019est pas vide.\n2. Pour les mois 1, 3, 5, 7, 8, 10 et 12, le nombre de jours ne doit pas \u00eatre inf\u00e9rieur \u00e0 1 ou sup\u00e9rieur \u00e0 31 jours. Les jours de 4, 6, 9 et 11 mois ne doivent pas \u00eatre inf\u00e9rieurs \u00e0 1 jour ou sup\u00e9rieurs \u00e0 30 jours. En outre, le nombre de jours au cours du deuxi\u00e8me mois ne doit pas \u00eatre inf\u00e9rieur \u00e0 1 ni sup\u00e9rieur \u00e0 29.\n3. Le mois ne peut pas \u00eatre inf\u00e9rieur \u00e0 1 ou sup\u00e9rieur \u00e0 12.\n4. Le format de la date est: mm-jd-aaaa\n\nPar exemple:\nvalid_date('03-11-2000') => True\n\nvalid_date('15-01-2012') => False\n\nvalid_date('04-0-2040') => False\n\nvalid_date('06-04-2020') => True\n\nvalid_date('06/04/2020') => False\n"}
{"task_id": "HumanEval/125", "keyWords": "\n\u00c9tant donn\u00e9 une cha\u00eene de mots, retourne une liste de mots divis\u00e9s par des espaces. Si aucun espace n\u2019est pr\u00e9sent dans le texte saisi, il doit \u00eatre s\u00e9par\u00e9 par une virgule. Si aucune virgule n\u2019est pr\u00e9sente, il doit retourner le nombre de minuscules de la cha\u00eene dont la position dans l\u2019alphabet est impair, ord(\u2019a\u2019) = 0, ord(\u2019b\u2019) = 1,... Ord ('z') = 25\nexemples\nsplit_words(\"Hello world!\" ) \u279e [\"Hello\", \"world!\"]\nsplit_words(\"Hello,world!\" ) \u279e [\"Hello\", \"world!\"]\nsplit_words(\"abcdef\") == 3\n"}
{"task_id": "HumanEval/126", "keyWords": "\nDonn\u00e9 une liste de nombres, retourne s\u2019ils sont tri\u00e9s dans l\u2019ordre croissant. Retourne False si la liste contient plus d\u2019une copie du m\u00eame num\u00e9ro. Supposons qu\u2019il n\u2019y a pas de nombres n\u00e9gatifs, seulement des entiers.\n\nexemples\nis_sorted([5]) \u279e True\nis_sorted([1, 2, 3, 4, 5]) \u279e True\nis_sorted([1, 3, 2, 4, 5]) \u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) \u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) \u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) \u279e False\n"}
{"task_id": "HumanEval/127", "keyWords": "Vous donne deux intervalles de temps o\u00f9 chacun est une paire d\u2019entiers. Par exemple, l\u2019intervalle =(d\u00e9but, fin) =(1,2). L\u2019intervalle donn\u00e9 est ferm\u00e9, ce qui signifie que l\u2019intervalle (d\u00e9but, fin) comprend le d\u00e9but et la fin. Pour chaque intervalle donn\u00e9, on suppose que son point de d\u00e9part est inf\u00e9rieur ou \u00e9gal \u00e0 son point final. Votre t\u00e2che est de d\u00e9terminer si la longueur de l\u2019intervalle de chevauchement de ces deux intervalles est un nombre premier. Par exemple, l\u2019intersection de l\u2019intervalle (1,3), (2,4) est (2,3) qui est de longueur 1 et n\u2019est pas un nombre premier. Retourne \"YES\" si la longueur de l\u2019intersection est un nombre premier; Sinon, \"NO\" est retourn\u00e9. Si les deux intervalles ne se rencontrent pas, \"NO\" est retourn\u00e9.\n\n\n[entr\u00e9e/sortie] exemple:\nintersection((1, 2), (2, 3)) ==> \"NO\"\nintersection((-1, 1), (0, 4)) ==> \"NO\"\nintersection((-3, -1), (-5, 5)) ==> \"YES\"\n"}
{"task_id": "HumanEval/128", "keyWords": "\nVous donne un tableau d\u2019entiers arr qui retourne la somme des tailles de tous les entiers multipli\u00e9e par le produit de tous les symboles d\u2019entiers, le symbole de chaque nombre repr\u00e9sent\u00e9 par 1, -1 ou 0. Remarque: retourne None pour arr vide.\n\nExemples de:\n"}
{"task_id": "HumanEval/129", "keyWords": "\n\u00c9tant donn\u00e9 une grille de N lignes et de N colonnes (N >= 2) et un entier positif k, chaque cellule de la grille contient une valeur. Les entiers sur les cellules de la grille n\u2019apparaissent qu\u2019une seule fois et sont dans l\u2019intervalle [1, N * N].\nVous devez trouver un chemin minimum de longueur k dans la grille. Vous pouvez commencer\n\u00c0 partir de n\u2019importe quelle cellule, \u00e0 chaque \u00e9tape, vous pouvez vous d\u00e9placer vers n\u2019importe quelle cellule adjacente. En d\u2019autres termes, vous pouvez trouver une cellule qui partage un c\u00f4t\u00e9 avec votre position actuelle\n.\nNotez qu\u2019un chemin de longueur k signifie que k cellules sont visit\u00e9es exactement (pas n\u00e9cessairement diff\u00e9rentes). Vous ne pouvez pas vous d\u00e9connecter du r\u00e9seau. Le chemin A(de longueur k) est consid\u00e9r\u00e9 comme inf\u00e9rieur au chemin B(de longueur k) si, apr\u00e8s avoir tri\u00e9 les valeurs des cellules A et B\nPar (nous les appelons lst_A et lst_B), lst_A est moins dans l\u2019ordre lexique\nLst_B, en d\u2019autres termes, il existe un entier index i (1 <= i <= k)\nTel que lst_A[i] < lst_B[i] et pour tout j (1 <= j < i)\nLst_A [j] = lst_B[j]. Peut garantir que la r\u00e9ponse est unique. Retourne une liste ordonn\u00e9e des valeurs sur la cellule travers\u00e9e par le chemin le plus petit.\n\nExemples de:\n\nEntr\u00e9e: grille = [[1,2,3], [4,5,6], [7,8,9]], k = 3\nSortie: [1, 2, 1]\n\nEntr\u00e9e: grille = [[5,9,3], [4,1,6], [7,8,2]], k = 1\nSortie: [1]\n"}
{"task_id": "HumanEval/130", "keyWords": "Tout le monde conna\u00eet la suite de fibonacci. Au cours des si\u00e8cles pass\u00e9s, elle a \u00e9t\u00e9 \u00e9tudi\u00e9e en profondeur par les math\u00e9maticiens. Cependant, ce que les gens ne connaissent pas, c\u2019est la suite de tribonacci.\nLa suite de tribonacci est d\u00e9finie par la r\u00e9currence:\ntri(1) = 3\ntri(n) = 1 + n / 2, if n is even.\ntri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\nPar exemple:\ntri(2) = 1 + (2 / 2) = 2\ntri(4) = 3\ntri(3) = tri(2) + tri(1) + tri(4)\n= 2 + 3 + 3 = 8\nEn vous donnant un entier non n\u00e9gatif n, vous devez retourner une liste contenant les n + 1 premiers nombres de la suite Tribonacci.\n"}
{"task_id": "HumanEval/131", "keyWords": "Donn\u00e9 un entier positif n, retourne le produit de tous les nombres dont le nombre de bits est impair. Retourne 0 si tous les chiffres sont pairs.\n"}
{"task_id": "HumanEval/132", "keyWords": "\nCr\u00e9e une fonction qui accepte comme entr\u00e9e une cha\u00eene de caract\u00e8res contenant seulement des crochets. Cette fonction doit retourner True si et seulement si une s\u00e9quence de parenth\u00e8ses valide existe,\nO\u00f9 au moins une parenth\u00e8se est imbriqu\u00e9e dans la sous-s\u00e9quence.\n\nis_nested('[[]]') \u279e True\nis_nested('[]]]]]]][[[[[]') \u279e False\nis_nested('[][]') \u279e False\nis_nested('[]') \u279e False\nis_nested('[[][]]') \u279e True\nis_nested('[[]][[') \u279e True\n"}
{"task_id": "HumanEval/133", "keyWords": "Vous donner une liste de num\u00e9ros. Tout d\u2019abord, arrondissez chaque \u00e9l\u00e9ment de la liste pour obtenir la somme des carr\u00e9s des nombres de la liste donn\u00e9e.\nExemples de:\nPour LST = [1,2,3] la sortie est 14\nPour LST = [1,4,9] la sortie est 98\nPour LST = [1,3,5,7] la sortie est 84\nPour LST = [1.4,4.2,0] la sortie est 17\nPour LST = [-2.4,1,1] la sortie est 6\n\n\n"}
{"task_id": "HumanEval/134", "keyWords": "\nCr\u00e9e une fonction qui retourne True si la valeur du dernier caract\u00e8re est un caract\u00e8re alphab\u00e9tique et ne fait pas partie d\u2019un mot, et False pour le reste. Note: \u00abmot\u00bb est un groupe de caract\u00e8res s\u00e9par\u00e9s par des espaces.\nPar exemple:\ncheck_if_last_char_is_a_letter(\"apple pie\") \u279e False\ncheck_if_last_char_is_a_letter(\"apple pi e\") \u279e True\ncheck_if_last_char_is_a_letter(\"apple pi e \") \u279e False\ncheck_if_last_char_is_a_letter(\"\") \u279e False\n"}
{"task_id": "HumanEval/135", "keyWords": "Cr\u00e9e une fonction qui renvoie un \u00e9l\u00e9ment qui n\u2019est pas sup\u00e9rieur ou \u00e9gal \u00e0 l\u2019index maximum de l\u2019\u00e9l\u00e9ment qui le pr\u00e9c\u00e8de imm\u00e9diatement. Si un tel \u00e9l\u00e9ment n\u2019existe pas, -1 est retourn\u00e9. Le tableau donn\u00e9 ne contient pas de valeurs en double.\n\nExemples de:\nCan_arrang\u00e9 ([1,2,4,3,5]) = 3\nCan_arrang\u00e9 ([1,2,3]) = -1\n"}
{"task_id": "HumanEval/136", "keyWords": "\nCr\u00e9ez une fonction qui retourne un tuple (a, b) o\u00f9 \u2019a\u2019 est le plus grand entier n\u00e9gatif de la liste et \u2019b\u2019 est le plus petit entier positif de la liste. Retourne None s\u2019il n\u2019y a pas d\u2019entier positif ou n\u00e9gatif.\nExemples de:\nlargest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)\nlargest_smallest_integers([]) == (None, None)\nlargest_smallest_integers([0]) == (None, None)\n"}
{"task_id": "HumanEval/137", "keyWords": "\nCr\u00e9e une fonction qui accepte des nombres entiers, flottants ou des cha\u00eenes de caract\u00e8res pour repr\u00e9senter les vrais nombres et retourne la plus grande variable du type de variable donn\u00e9. Retourne None si les valeurs sont \u00e9gales.\nNote: si les nombres r\u00e9els sont repr\u00e9sent\u00e9s en tant que cha\u00eenes de caract\u00e8res, les nombres flottants peuvent \u00eatre. Ou bien,\n\nComparaison one(1, 2.5) \u279e 2.5\nCompare_one (1, \"2,3\") \u279e \"2,3\"\nCompare_one (\"5,1\", \"6\") \u279e \"6\"\ncompare_one(\"1\", 1) \u279e None\n"}
{"task_id": "HumanEval/138", "keyWords": "D\u00e9terminer si le nombre donn\u00e9 n peut \u00eatre \u00e9crit comme la somme de exactement 4 nombres pairs positifs\nexemples\nis_equal_to_sum_even(4) == False\nis_equal_to_sum_even(6) == False\nis_equal_to_sum_even(8) == True\n"}
{"task_id": "HumanEval/139", "keyWords": "La factorielle br\u00e9silienne est d\u00e9finie comme:\nbrazilian_factorial(n) = n! * (n-1)! * (n-2)! *.. * 1!\nLorsque n > 0\n\nExemples de:\n"}
{"task_id": "HumanEval/140", "keyWords": "\n\u00c9tant donn\u00e9 un texte de cha\u00eene, remplacez tous les espaces qu\u2019il contient par des soulignements,\nSi une cha\u00eene a plus de deux espaces cons\u00e9cutifs, remplacez alors tous les espaces cons\u00e9cutifs par -\n\nfix_spaces(\""}
{"task_id": "HumanEval/141", "keyWords": "Cr\u00e9e une fonction qui prend une cha\u00eene repr\u00e9sentant un nom de fichier et retourne \u2019oui\u2019 si le nom de fichier est valide, \u2019no\u2019 dans le cas contraire. Un nom de fichier est consid\u00e9r\u00e9 comme valide si et seulement si toutes les conditions suivantes sont remplies\nRencontrez:\n- le nom du fichier ne doit pas d\u00e9passer trois chiffres (\u20190\u2019 - \u20199\u2019).\n- le nom du fichier ne contient qu\u2019un point \u2019.\u2019\n- la sous-cha\u00eene avant le point ne doit pas \u00eatre vide et commencer par une lettre latine (\u2019a\u2019 -\u2019z\u2019 et \u2019a\u2019 -\u2019z\u2019).\n- la sous-cha\u00eene apr\u00e8s le point doit \u00eatre l\u2019une de ces :[\u2019txt\u2019, \u2019exe\u2019, \u2019dll\u2019]\nExemples de:\nfile_name_check(\""}
{"task_id": "HumanEval/142", "keyWords": "\"\nCette fonction prendra une liste d\u2019entiers. Pour tous les articles de la liste, si l\u2019index est un multiple de 3, la fonction doit \u00eatre carr\u00e9s de cet article entier. Si l\u2019index est un multiple de 4 au lieu de 3, cubique cet article entier. La fonction ne modifie pas les \u00e9l\u00e9ments de la liste dont l\u2019index n\u2019est pas un multiple de 3 ou 4. La fonction retournera alors la somme de tous les entiers.\n\nExemples de:\nPour LST = [1,2,3] la sortie devrait \u00eatre 6\nFor lst = []  the output should be 0\nPour LST = [-1,-5,2,-1,-5] la sortie devrait \u00eatre -126\n"}
{"task_id": "HumanEval/143", "keyWords": "\nVous donnez une cha\u00eene qui repr\u00e9sente une phrase contenant des mots s\u00e9par\u00e9s par des espaces. Vous devez retourner une cha\u00eene contenant des mots dont la longueur \u00e9tait premi\u00e8re dans la phrase originale. L\u2019ordre des mots dans la nouvelle cha\u00eene doit \u00eatre le m\u00eame que dans la cha\u00eene originale.\n\nExemple 1:\nEntrez: sentence = \"ceci est un test\"\nSortie: \u00abis\u00bb\n\nExemple 2:\nType: sentence = \"laissez aller \u00e0 la natation\"\nSortie: \"go for\"\n\nLes contraintes:\n* 1 <= len(sentence) <= 100\n* les phrases ne contiennent que des lettres\n"}
{"task_id": "HumanEval/144", "keyWords": "Votre t\u00e2che est d\u2019impl\u00e9menter une fonction x * n qui simplifie l\u2019expression. Si le r\u00e9sultat du calcul de x * n est un entier, la fonction retourne True, sinon False. Les deux x et n sont des repr\u00e9sentations de cha\u00eene de fractions du format suivant :< num\u00e9rateur >/< d\u00e9nominateur > o\u00f9 le num\u00e9rateur et le d\u00e9nominateur sont des entiers positifs. Vous pouvez supposer que x et n sont des fractions valides avec un d\u00e9nominateur diff\u00e9rent de 0.\n\n"}
{"task_id": "HumanEval/145", "keyWords": "\n\u00c9crivez une fonction qui trie une liste donn\u00e9e d\u2019entiers dans l\u2019ordre croissant de la somme des chiffres. Note: s\u2019il y a plusieurs articles avec le m\u00eame nombre de chiffres, classez-les selon leur index dans la liste originale.\n\nPar exemple:\n"}
{"task_id": "HumanEval/146", "keyWords": "\u00c9crire une fonction qui prend un ensemble de chiffres comme entr\u00e9e et retourne des nombres dans le tableau plus grands que 10 et dont le premier et le dernier chiffre sont impaires (1, 3, 5, 7, 9).\nPar exemple:\nspecialFilter([15, -73, 14, -15]) => 1\nspecialFilter([33, -2, -3, 45, 21, 109]) => 2\n"}
{"task_id": "HumanEval/147", "keyWords": "\n\u00c9tant donn\u00e9 un entier positif n, vous devez cr\u00e9er un tableau a d\u2019entiers de longueur n. Pour chaque i(1\u2264i\u2264n), la valeur de a[i] = i * i-i + 1. Retourne le nombre de triplettes (a[i], a[j], a[k]) dont i < j < k et o\u00f9 a[i] + a[j] + a[k] est un multiple de 3.\nExemples de:\nEntr\u00e9e: n = 5\nSorties: 1\nExplication de:\na = [1, 3, 7, 13, 21]\nUn seul triplet est (1, 7, 13).\n"}
{"task_id": "HumanEval/148", "keyWords": "\nNotre syst\u00e8me solaire compte huit plan\u00e8tes: mercure est la plus proche du soleil, v\u00e9nus est la suivante, puis la terre, mars, jupiter, saturne, uranus, neptune. \u00c9crivez une fonction qui prend les noms des deux plan\u00e8tes comme cha\u00eenes planet1 et planet2. Cette fonction devrait retourner un tuple contenant toutes les plan\u00e8tes dont l\u2019orbite est situ\u00e9e entre l\u2019orbite de la plan\u00e8te 1 et celle de la plan\u00e8te 2, dans l\u2019ordre de proximit\u00e9 du soleil. Si planet1 ou planet2 n\u2019est pas le nom correct de la plan\u00e8te, la fonction doit renvoyer un tuple vide.\nexemples\nbf(\"Jupiter\", \"Neptune\") ==> (\"Saturn\", \"Uranus\")\nbf(\"Earth\", \"Mercury\") ==> (\"Venus\")\nbf(\"Mercury\", \"Uranus\") ==> (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")\n"}
{"task_id": "HumanEval/149", "keyWords": "\u00c9crire une fonction qui prend une liste de cha\u00eenes de caract\u00e8res comme argument, en supprime les cha\u00eenes de longueur impair et retourne une liste de r\u00e9sultats dispos\u00e9s dans un certain ordre. La liste est toujours une liste de cha\u00eenes de caract\u00e8res, pas un tableau de nombres, qui peut contenir des cha\u00eenes en double. L\u2019ordre de la liste doit \u00eatre dans l\u2019ordre croissant de la longueur de chaque mot et vous devez retourner la liste tri\u00e9e par cette r\u00e8gle. Si deux mots ont la m\u00eame longueur, ils sont tri\u00e9s par ordre alphab\u00e9tique.\nCette fonction devrait renvoyer une liste ordonn\u00e9e de cha\u00eenes. Vous pouvez supposer que tous les mots ont la m\u00eame longueur.\nPar exemple:\nassert list_sort([\"aa\", \"a\", \"aaa\"]) => [\"aa\"]\nassert list_sort([\"ab\", \"a\", \"aaa\", \"cd\"]) => [\"ab\", \"cd\"]\n"}
{"task_id": "HumanEval/150", "keyWords": "Un programme simple qui devrait retourner la valeur de x si n est un nombre premier\n, sinon la valeur de y doit \u00eatre retourn\u00e9e.\n\n"}
{"task_id": "HumanEval/151", "keyWords": "\nDonn\u00e9 une liste de nombres, retourne la somme des carr\u00e9s des nombres impaires de la liste. Ignorer les nombres n\u00e9gatifs ou non entiers.\n\ndouble_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\ndouble_the_difference([-1, -2, 0]) == 0\ndouble_the_difference([9, -2]) == 81\ndouble_the_difference([0]) == 0\n\nRetourne 0 si la liste d\u2019entr\u00e9e est vide.\n"}
{"task_id": "HumanEval/152", "keyWords": "Je pense que nous nous souvenons tous de ce sentiment lorsque le r\u00e9sultat d\u2019un \u00e9v\u00e9nement quelque peu attendu est enfin connu. Vos sentiments et pens\u00e9es \u00e0 ce moment valent vraiment la peine d\u2019\u00eatre not\u00e9s et compar\u00e9s.\nVotre t\u00e2che est de d\u00e9terminer si une personne a correctement devin\u00e9 certains r\u00e9sultats correspondant. Vous obtenez deux tableaux de fractions et de devinettes de m\u00eame longueur, o\u00f9 chaque index affiche un match. Retourne un tableau de m\u00eame longueur indiquant la distance \u00e0 chaque fois que vous devinez. Si elles ont devin\u00e9 correctement, la valeur est 0. Sinon, la valeur est la diff\u00e9rence absolue entre la valeur devin\u00e9e et le score.\n\n\nExemples de:\n\nCompar\u00e9 \u00e0 [1,2,3,4,5,1] [1,2,3,4,2-2] - > [0,0,0,0,3,3]\nCompar\u00e9 \u00e0 [0,5,0,0,0,4] [4,1,1,0,0-2] - > [4,4,1,0,0,6]\n"}
{"task_id": "HumanEval/153", "keyWords": "Vous obtiendrez le nom de la classe (une cha\u00eene) et une colonne \u00e9tendue. Les extensions seront utilis\u00e9es pour charger d\u2019autres classes dans une classe. L\u2019intensit\u00e9 de l\u2019extension est la suivante: soit CAP le nombre de majuscules dans le nom de l\u2019extension et SM le nombre de petites et moyennes lettres dans le nom de l\u2019extension. L\u2019intensit\u00e9 est donn\u00e9e par la fraction cap-sm. Vous devez trouver le plus \u00e9tendu et une cha\u00eene se pr\u00e9sente comme suit: ClassName le StrongestExtensionName. S\u2019il y a deux extensions ou plus de la m\u00eame intensit\u00e9, vous devez choisir celle en premier dans la liste. Par exemple, si vous donnez \"Slices\" comme classe et vous donnez une extension de liste :[\u2019servingslices\u2019, \u2019cheese\u2019, \u2019stuffed \u2019] alors vous devriez\nRetourne \u2019slices.servingslices\u2019 car \u2019servingslices\u2019 est l\u2019extension la plus forte (sa force est -1).\nExemples de:\nStrongest_Extension (my_class \u2019 [aa\u2019, Be \u2019, \u2019 cc\u2019]) = \u2019 my_class aa\u2019 a\n"}
{"task_id": "HumanEval/154", "keyWords": "Deux mots pour vous. Si le deuxi\u00e8me mot ou l\u2019une de ses rotations est une sous-cha\u00eene du premier mot, vous devez retourner True\ncycpattern_check(\"abcd\",\"abd\") => False\ncycpattern_check(\"hello\",\"ell\") => True\ncycpattern_check(\"whassup\",\"psus\") => False\ncycpattern_check(\"abab\",\"baa\") => True\ncycpattern_check(\"efef\",\"eeff\") => False\ncycpattern_check(\"himenss\",\"simen\") => True\n\n"}
{"task_id": "HumanEval/155", "keyWords": "Donner un nombre entier. Retourne un tuple contenant respectivement le nombre de chiffres paires et impaires.\n\n"}
{"task_id": "HumanEval/156", "keyWords": "\n\u00c9tant donn\u00e9 un entier positif, obtenir sa cha\u00eene de chiffres romains \u00e9quivalente; Et retourn\u00e9 en minuscules.\nContrainte: 1 <= num <= 1000\n\nExemples de:\n"}
{"task_id": "HumanEval/157", "keyWords": "\nDonn\u00e9e la longueur des trois c\u00f4t\u00e9s d\u2019un triangle. Retourne True si 3 c\u00f4t\u00e9s forment un triangle rectangle, False dans le cas contraire. Un triangle rectangle est un triangle dont l\u2019un des angles est rectangle ou de 90 degr\u00e9s.\nExemples de:\nright_angle_triangle(3, 4, 5) == True\nright_angle_triangle(1, 2, 3) == False\n"}
{"task_id": "HumanEval/158", "keyWords": "\u00c9crivez une fonction qui accepte une liste de cha\u00eenes. Cette liste contient diff\u00e9rents mots. Retourne les mots avec un maximum de caract\u00e8res uniques. Si plusieurs cha\u00eenes ont le plus grand nombre de caract\u00e8res uniques, la cha\u00eene qui appara\u00eet en premier dans l\u2019ordre dictionnaire est retourn\u00e9e.\n\nfind_max([\"name\", \"of\", \"string\"]) == \"string\"\nfind_max([\"name\", \"enam\", \"game\"]) == \"enam\"\nfind_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n"}
{"task_id": "HumanEval/159", "keyWords": "\nVous \u00eates un lapin affam\u00e9 et vous avez mang\u00e9 une certaine quantit\u00e9 de carottes, mais maintenant vous devez manger plus de carottes pour terminer les trois repas de la journ\u00e9e. Vous devriez retourner un tableau [nombre total de carottes mang\u00e9es apr\u00e8s le repas, nombre de carottes restantes apr\u00e8s le repas]. S\u2019il ne reste pas assez de carottes, vous mangerez toutes les carottes restantes, mais vous aurez toujours faim.\n\nExemples de:\n* eat(5, 6, 10) -> [11, 4]\n* eat(4, 8, 9) -> [12, 1]\n* eat(1, 10, 10) -> [11, 0]\n* eat(2, 11, 5) -> [7, 0]\n\nLes variables:\n@number : integer\nLa quantit\u00e9 de carottes que vous mangez.\n@need : integer\nCombien de carottes vous devez manger.\n@remaining : integer\nQuantit\u00e9 de carottes restantes dans le stock\n\nConstrain:\n* 0 <= number <= 1000\n* 0 <= need <= 1000\n* 0 <= remaining <= 1000\n\nAmusez-vous bien :)\n"}
{"task_id": "HumanEval/160", "keyWords": "\nDeux listes sont donn\u00e9es, les op\u00e9rateurs et les op\u00e9randes. La premi\u00e8re liste a des op\u00e9rations alg\u00e9briques de base, et la deuxi\u00e8me liste est une liste d\u2019entiers. Deux listes donn\u00e9es sont utilis\u00e9es pour construire une expression alg\u00e9brique et retourner l\u2019\u00e9valuation de cette expression.\n\nOp\u00e9rations alg\u00e9briques de base:\nAjouter (+)\nLa soustraction (-)\nLa multiplication (*)\nDivisibilit\u00e9 (//)\nExposant (**)\n\n"}
{"task_id": "HumanEval/161", "keyWords": "Vous donne une cha\u00eene S. Si S [i] est une lettre, inversez la casse de la lettre. Sinon, laissez-le tel quel. Inverser la cha\u00eene si elle ne contient pas de lettre. La fonction devrait renvoyer la cha\u00eene de r\u00e9sultat.\nexemples\nsolve(\"1234\") = \"4321\"\nsolve(\"ab\") = \"AB\"\nsolve(\"#a@C\") = \"#A@c\"\n"}
{"task_id": "HumanEval/162", "keyWords": "\nLa cha\u00eene \u2019text\u2019 est donn\u00e9e et son \u00e9quivalent md5 est retourn\u00e9. Retourne None si \u2019text\u2019 est une cha\u00eene vide.\n\n"}
{"task_id": "HumanEval/163", "keyWords": "\nDonn\u00e9 deux entiers positifs a et b, retourne le nombre pair entre a et b, dans l\u2019ordre croissant.\n\nPar exemple:\ngenerate_integers(2, 8) => [2, 4, 6, 8]\ngenerate_integers(8, 2) => [2, 4, 6, 8]\ngenerate_integers(10, 14) => [10, 12, 14]\n"}
