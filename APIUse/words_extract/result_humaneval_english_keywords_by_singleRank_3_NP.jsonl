{"task_id": "HumanEval/0", "keyWords": ""}
{"task_id": "HumanEval/1", "keyWords": ""}
{"task_id": "HumanEval/2", "keyWords": "(largest integer smaller"}
{"task_id": "HumanEval/3", "keyWords": ""}
{"task_id": "HumanEval/4", "keyWords": ""}
{"task_id": "HumanEval/5", "keyWords": ""}
{"task_id": "HumanEval/6", "keyWords": ""}
{"task_id": "HumanEval/7", "keyWords": ""}
{"task_id": "HumanEval/8", "keyWords": ""}
{"task_id": "HumanEval/9", "keyWords": "until given moment"}
{"task_id": "HumanEval/10", "keyWords": ""}
{"task_id": "HumanEval/11", "keyWords": ""}
{"task_id": "HumanEval/12", "keyWords": ""}
{"task_id": "HumanEval/13", "keyWords": ""}
{"task_id": "HumanEval/14", "keyWords": ""}
{"task_id": "HumanEval/15", "keyWords": ""}
{"task_id": "HumanEval/16", "keyWords": ""}
{"task_id": "HumanEval/17", "keyWords": ""}
{"task_id": "HumanEval/18", "keyWords": ""}
{"task_id": "HumanEval/19", "keyWords": ""}
{"task_id": "HumanEval/20", "keyWords": ""}
{"task_id": "HumanEval/21", "keyWords": ""}
{"task_id": "HumanEval/22", "keyWords": "filter given list"}
{"task_id": "HumanEval/23", "keyWords": ""}
{"task_id": "HumanEval/24", "keyWords": ""}
{"task_id": "HumanEval/25", "keyWords": ""}
{"task_id": "HumanEval/26", "keyWords": ""}
{"task_id": "HumanEval/27", "keyWords": ""}
{"task_id": "HumanEval/28", "keyWords": ""}
{"task_id": "HumanEval/29", "keyWords": ""}
{"task_id": "HumanEval/30", "keyWords": ""}
{"task_id": "HumanEval/31", "keyWords": ""}
{"task_id": "HumanEval/32", "keyWords": "largest non zero coefficient, return x s[, takes list xs, having even number"}
{"task_id": "HumanEval/33", "keyWords": "is id entical"}
{"task_id": "HumanEval/34", "keyWords": ""}
{"task_id": "HumanEval/35", "keyWords": ""}
{"task_id": "HumanEval/36", "keyWords": ""}
{"task_id": "HumanEval/37", "keyWords": "is id entical"}
{"task_id": "HumanEval/38", "keyWords": "returns encoded string, = [(grou p["}
{"task_id": "HumanEval/39", "keyWords": ""}
{"task_id": "HumanEval/40", "keyWords": ""}
{"task_id": "HumanEval/41", "keyWords": "are infinitely sturdy"}
{"task_id": "HumanEval/42", "keyWords": ""}
{"task_id": "HumanEval/43", "keyWords": ""}
{"task_id": "HumanEval/44", "keyWords": "change numerical base, return string representation"}
{"task_id": "HumanEval/45", "keyWords": ""}
{"task_id": "HumanEval/46", "keyWords": ""}
{"task_id": "HumanEval/47", "keyWords": ""}
{"task_id": "HumanEval/48", "keyWords": ""}
{"task_id": "HumanEval/49", "keyWords": ""}
{"task_id": "HumanEval/50", "keyWords": "returns encoded string, shifting every character"}
{"task_id": "HumanEval/51", "keyWords": ""}
{"task_id": "HumanEval/52", "keyWords": "below threshold t"}
{"task_id": "HumanEval/53", "keyWords": ""}
{"task_id": "HumanEval/54", "keyWords": ""}
{"task_id": "HumanEval/55", "keyWords": ""}
{"task_id": "HumanEval/56", "keyWords": ""}
{"task_id": "HumanEval/57", "keyWords": "are monotonically increasing"}
{"task_id": "HumanEval/58", "keyWords": "sorted unique common elements"}
{"task_id": "HumanEval/59", "keyWords": ""}
{"task_id": "HumanEval/60", "keyWords": ""}
{"task_id": "HumanEval/61", "keyWords": ""}
{"task_id": "HumanEval/62", "keyWords": ""}
{"task_id": "HumanEval/63", "keyWords": ""}
{"task_id": "HumanEval/64", "keyWords": ""}
{"task_id": "HumanEval/65", "keyWords": ""}
{"task_id": "HumanEval/66", "keyWords": ""}
{"task_id": "HumanEval/67", "keyWords": ""}
{"task_id": "HumanEval/68", "keyWords": "has non-negative integer nodes, has smallest index"}
{"task_id": "HumanEval/69", "keyWords": ""}
{"task_id": "HumanEval/70", "keyWords": ""}
{"task_id": "HumanEval/71", "keyWords": ""}
{"task_id": "HumanEval/72", "keyWords": ""}
{"task_id": "HumanEval/73", "keyWords": ""}
{"task_id": "HumanEval/74", "keyWords": ""}
{"task_id": "HumanEval/75", "keyWords": "is less then"}
{"task_id": "HumanEval/76", "keyWords": ""}
{"task_id": "HumanEval/77", "keyWords": ""}
{"task_id": "HumanEval/78", "keyWords": ""}
{"task_id": "HumanEval/79", "keyWords": ""}
{"task_id": "HumanEval/80", "keyWords": ""}
{"task_id": "HumanEval/81", "keyWords": ""}
{"task_id": "HumanEval/82", "keyWords": ""}
{"task_id": "HumanEval/83", "keyWords": ""}
{"task_id": "HumanEval/84", "keyWords": ""}
{"task_id": "HumanEval/85", "keyWords": ""}
{"task_id": "HumanEval/86", "keyWords": ""}
{"task_id": "HumanEval/87", "keyWords": ""}
{"task_id": "HumanEval/88", "keyWords": ""}
{"task_id": "HumanEval/89", "keyWords": ""}
{"task_id": "HumanEval/90", "keyWords": ""}
{"task_id": "HumanEval/91", "keyWords": ""}
{"task_id": "HumanEval/92", "keyWords": ""}
{"task_id": "HumanEval/93", "keyWords": ""}
{"task_id": "HumanEval/94", "keyWords": ""}
{"task_id": "HumanEval/95", "keyWords": ""}
{"task_id": "HumanEval/96", "keyWords": "are prime numbers"}
{"task_id": "HumanEval/97", "keyWords": ""}
{"task_id": "HumanEval/98", "keyWords": ""}
{"task_id": "HumanEval/99", "keyWords": ""}
{"task_id": "HumanEval/100", "keyWords": ""}
{"task_id": "HumanEval/101", "keyWords": ""}
{"task_id": "HumanEval/102", "keyWords": ""}
{"task_id": "HumanEval/103", "keyWords": ""}
{"task_id": "HumanEval/104", "keyWords": ""}
{"task_id": "HumanEval/105", "keyWords": ""}
{"task_id": "HumanEval/106", "keyWords": ""}
{"task_id": "HumanEval/107", "keyWords": ""}
{"task_id": "HumanEval/108", "keyWords": "has signed digits"}
{"task_id": "HumanEval/109", "keyWords": "have unique elements"}
{"task_id": "HumanEval/110", "keyWords": ""}
{"task_id": "HumanEval/111", "keyWords": ""}
{"task_id": "HumanEval/112", "keyWords": ""}
{"task_id": "HumanEval/113", "keyWords": ""}
{"task_id": "HumanEval/114", "keyWords": ""}
{"task_id": "HumanEval/115", "keyWords": ""}
{"task_id": "HumanEval/116", "keyWords": ""}
{"task_id": "HumanEval/117", "keyWords": ""}
{"task_id": "HumanEval/118", "keyWords": ""}
{"task_id": "HumanEval/119", "keyWords": ""}
{"task_id": "HumanEval/120", "keyWords": ""}
{"task_id": "HumanEval/121", "keyWords": ""}
{"task_id": "HumanEval/122", "keyWords": ""}
{"task_id": "HumanEval/123", "keyWords": "then each ter m"}
{"task_id": "HumanEval/124", "keyWords": ""}
{"task_id": "HumanEval/125", "keyWords": ""}
{"task_id": "HumanEval/126", "keyWords": ""}
{"task_id": "HumanEval/127", "keyWords": ""}
{"task_id": "HumanEval/128", "keyWords": ""}
{"task_id": "HumanEval/129", "keyWords": "means visiting exactly k cells, is considered less, is lexicographically less"}
{"task_id": "HumanEval/130", "keyWords": "is tribonacci sequence"}
{"task_id": "HumanEval/131", "keyWords": ""}
{"task_id": "HumanEval/132", "keyWords": ""}
{"task_id": "HumanEval/133", "keyWords": ""}
{"task_id": "HumanEval/134", "keyWords": ""}
{"task_id": "HumanEval/135", "keyWords": ""}
{"task_id": "HumanEval/136", "keyWords": ""}
{"task_id": "HumanEval/137", "keyWords": ""}
{"task_id": "HumanEval/138", "keyWords": ""}
{"task_id": "HumanEval/139", "keyWords": ""}
{"task_id": "HumanEval/140", "keyWords": ""}
{"task_id": "HumanEval/141", "keyWords": "the file's name contains"}
{"task_id": "HumanEval/142", "keyWords": ""}
{"task_id": "HumanEval/143", "keyWords": "are prime numbers"}
{"task_id": "HumanEval/144", "keyWords": "are positive whole numbers, are valid fractions, are string representation"}
{"task_id": "HumanEval/145", "keyWords": "order ac cording"}
{"task_id": "HumanEval/146", "keyWords": ""}
{"task_id": "HumanEval/147", "keyWords": ""}
{"task_id": "HumanEval/148", "keyWords": "not correct planet names, are eight planets"}
{"task_id": "HumanEval/149", "keyWords": "have odd lengths"}
{"task_id": "HumanEval/150", "keyWords": ""}
{"task_id": "HumanEval/151", "keyWords": ""}
{"task_id": "HumanEval/152", "keyWords": ""}
{"task_id": "HumanEval/153", "keyWords": "load additional classes"}
{"task_id": "HumanEval/154", "keyWords": ""}
{"task_id": "HumanEval/155", "keyWords": ""}
{"task_id": "HumanEval/156", "keyWords": ""}
{"task_id": "HumanEval/157", "keyWords": "is right angle"}
{"task_id": "HumanEval/158", "keyWords": "have maximum number"}
{"task_id": "HumanEval/159", "keyWords": "enough remaining carrots"}
{"task_id": "HumanEval/160", "keyWords": "has basic algebra operations"}
{"task_id": "HumanEval/161", "keyWords": ""}
{"task_id": "HumanEval/162", "keyWords": "hash equivalent string"}
{"task_id": "HumanEval/163", "keyWords": ""}
{"task_id": "HumanEval/0", "keyWords": "given list, given threshold"}
{"task_id": "HumanEval/1", "keyWords": "string containing multiple grou ps, separate grou ps, separate those group, nested parentheses, separate strings, input string, open brace, your goal, i gnore"}
{"task_id": "HumanEval/2", "keyWords": "positive floating point number, integer part, given number, integer smaller, decimal part"}
{"task_id": "HumanEval/3", "keyWords": "bank ac count, ac count fallls, point function, withdrawal operations, your task"}
{"task_id": "HumanEval/4", "keyWords": "calculate mean absolute deviation, mean absolute deviation, average absolute difference, input numbers, given list"}
{"task_id": "HumanEval/5", "keyWords": "input list `numbers, consecutive elements, number 'delimeter"}
{"task_id": "HumanEval/6", "keyWords": "string represented multiple grou ps, nested parentheses, deepest level"}
{"task_id": "HumanEval/7", "keyWords": "contain given substring, input list"}
{"task_id": "HumanEval/8", "keyWords": "empty sum, empty product, given list, tuple consisting"}
{"task_id": "HumanEval/9", "keyWords": "rolling maximum element, given list, given moment"}
{"task_id": "HumanEval/10", "keyWords": "supplied string, string prefix, given string, shortest palindrome, longest postfix, def make_palindrome(string, palindromic suffix"}
{"task_id": "HumanEval/11", "keyWords": "perform binary xor, b consisting, strings a"}
{"task_id": "HumanEval/12", "keyWords": "input list, same length"}
{"task_id": "HumanEval/13", "keyWords": "greatest common divisor, integers a"}
{"task_id": "HumanEval/14", "keyWords": "input string"}
{"task_id": "HumanEval/15", "keyWords": "string containing space, delimited numbers"}
{"task_id": "HumanEval/16", "keyWords": "many distinct characters"}
{"task_id": "HumanEval/17", "keyWords": "string representing musical notes, special ascii format, quater note, half note, your task"}
{"task_id": "HumanEval/18", "keyWords": "count overlaping cases, original string, given substring, many times"}
{"task_id": "HumanEval/19", "keyWords": "delimited string, valid choices"}
{"task_id": "HumanEval/20", "keyWords": "least tw, maller number, larger number, supplied list"}
{"task_id": "HumanEval/21", "keyWords": "element s), smallest number, linear transform"}
{"task_id": "HumanEval/22", "keyWords": "any python values, given list"}
{"task_id": "HumanEval/23", "keyWords": "given string"}
{"task_id": "HumanEval/24", "keyWords": "largest number, given number"}
{"task_id": "HumanEval/25", "keyWords": "prime factors, many times, input number, given integer"}
{"task_id": "HumanEval/26", "keyWords": "keep order"}
{"task_id": "HumanEval/27", "keyWords": "flip lowercase characters, given string"}
{"task_id": "HumanEval/28", "keyWords": "single string"}
{"task_id": "HumanEval/29", "keyWords": "input list, given prefix"}
{"task_id": "HumanEval/30", "keyWords": "positive numbers"}
{"task_id": "HumanEval/31", "keyWords": "given number"}
{"task_id": "HumanEval/32", "keyWords": "coefficients xs, non zero coefficient, point x, list xs, x s[, x ^n, even number"}
{"task_id": "HumanEval/33", "keyWords": "corresponding indicies, id entical, this function"}
{"task_id": "HumanEval/34", "keyWords": "sorted unique elements"}
{"task_id": "HumanEval/35", "keyWords": "maximum element"}
{"task_id": "HumanEval/36", "keyWords": "integers less"}
{"task_id": "HumanEval/37", "keyWords": "even indicies, odd indicies, id entical, this function"}
{"task_id": "HumanEval/38", "keyWords": "cycling grou ps, grou ps, grou p[, join(grou ps, each group, string encoded, encoded string, * i +, unless group, cycle elements, [(grou p[, encode_cyclic function, def decode_cyclic"}
{"task_id": "HumanEval/39", "keyWords": "fibonacci number, th number"}
{"task_id": "HumanEval/40", "keyWords": "distinct elements"}
{"task_id": "HumanEval/41", "keyWords": "perfectly straight infinitely long line, two cars, all cars, right hits, infinitely sturdy, this function, same speed, ir trajectory, such collisions, different set"}
{"task_id": "HumanEval/42", "keyWords": "return list"}
{"task_id": "HumanEval/43", "keyWords": "distinct elements"}
{"task_id": "HumanEval/44", "keyWords": "base numbers, numerical base, string representation, input number"}
{"task_id": "HumanEval/45", "keyWords": "high return, given length"}
{"task_id": "HumanEval/46", "keyWords": "the fib4 number sequence, fib4 number sequence, sequence similar, fibbonacci sequnece, th element, efficiently compute, 's defined"}
{"task_id": "HumanEval/47", "keyWords": "list l, return median"}
{"task_id": "HumanEval/48", "keyWords": "given string"}
{"task_id": "HumanEval/49", "keyWords": "modulo p"}
{"task_id": "HumanEval/50", "keyWords": "string encoded, encoded string, shift function, every character"}
{"task_id": "HumanEval/51", "keyWords": ""}
{"task_id": "HumanEval/52", "keyWords": "list l, threshold t"}
{"task_id": "HumanEval/53", "keyWords": "numbers x"}
{"task_id": "HumanEval/54", "keyWords": "same characters"}
{"task_id": "HumanEval/55", "keyWords": "th fibonacci number"}
{"task_id": "HumanEval/56", "keyWords": "corresponding closing bracket"}
{"task_id": "HumanEval/57", "keyWords": "monotonically increasing"}
{"task_id": "HumanEval/58", "keyWords": "unique common elements"}
{"task_id": "HumanEval/59", "keyWords": "largest prime factor"}
{"task_id": "HumanEval/60", "keyWords": "sums numbers"}
{"task_id": "HumanEval/61", "keyWords": "corresponding closing bracket"}
{"task_id": "HumanEval/62", "keyWords": "x s[, xs represent coefficients, return derivative, same form"}
{"task_id": "HumanEval/63", "keyWords": "the fibfib number sequence, fibfib number sequence, sequence similar, fibbonacci sequnece, efficiently compute, 's defined, th element"}
{"task_id": "HumanEval/64", "keyWords": "function vowels, def vowels, string representing, count (s, given word, test cases"}
{"task_id": "HumanEval/65", "keyWords": "integer x"}
{"task_id": "HumanEval/66", "keyWords": "upper characters, ascii codes"}
{"task_id": "HumanEval/67", "keyWords": "tal number, mango fruits"}
{"task_id": "HumanEval/68", "keyWords": "same smallest even value, smallest even value, if multiple nodes, non-negative integer nodes, smallest index, even values, given array"}
{"task_id": "HumanEval/69", "keyWords": "greatest integer, integer itself, non-empty list, the frequency, positive integers"}
{"task_id": "HumanEval/70", "keyWords": "strange order, strange sorting, remaining integers, minimum value"}
{"task_id": "HumanEval/71", "keyWords": "valid triangle, three sides, decimal points, third side"}
{"task_id": "HumanEval/72", "keyWords": "the object q, maximum possible weight w, object q, palindromic list, 's balanced"}
{"task_id": "HumanEval/73", "keyWords": "a palindromic array, array palindromic, array arr, minimum number"}
{"task_id": "HumanEval/74", "keyWords": "o ther list, list less, tal number, same number"}
{"task_id": "HumanEval/75", "keyWords": "false o therwise, given number, prime numbers, less then"}
{"task_id": "HumanEval/76", "keyWords": "simple power, number x, your task"}
{"task_id": "HumanEval/77", "keyWords": "integer number"}
{"task_id": "HumanEval/78", "keyWords": "hexadecimal number, prime number, natural number, hexadecimal digits, smaller natural numbers, prime numbers, empty string, d (=decimal, following digits, b (=decimal"}
{"task_id": "HumanEval/79", "keyWords": "the extra characters, binary format, the function, each character, extra couple, decimal form"}
{"task_id": "HumanEval/80", "keyWords": "a string, string s, your task, consecutive letters"}
{"task_id": "HumanEval/81", "keyWords": "the only problem, the teacher, letter grades, own algorith m, gpa s, letter grade, following table"}
{"task_id": "HumanEval/82", "keyWords": "prime number"}
{"task_id": "HumanEval/83", "keyWords": "positive integers, positive integer"}
{"task_id": "HumanEval/84", "keyWords": "positive integer n, tal sum"}
{"task_id": "HumanEval/85", "keyWords": "even elements, integers lst, non-empty list, odd indices"}
{"task_id": "HumanEval/86", "keyWords": "ascending order, ordered version, blan k spaces, ascii value, new word"}
{"task_id": "HumanEval/87", "keyWords": "sort coordinates initially, sort coordinates, given lst, different number, nested lists, ascending order, dimensional data, descending order"}
{"task_id": "HumanEval/88", "keyWords": "given array, index value, non-negative integers"}
{"task_id": "HumanEval/89", "keyWords": "the alphabet, string encrypted, function encrypt"}
{"task_id": "HumanEval/90", "keyWords": "smallest element, such element"}
{"task_id": "HumanEval/91", "keyWords": "a boredom"}
{"task_id": "HumanEval/92", "keyWords": "o ther, ther cases"}
{"task_id": "HumanEval/93", "keyWords": "only letters, english alphabet, swaps case"}
{"task_id": "HumanEval/94", "keyWords": "largest prime value"}
{"task_id": "HumanEval/95", "keyWords": "upper case, given dictionary, the function"}
{"task_id": "HumanEval/96", "keyWords": "non-negative integer, prime numbers"}
{"task_id": "HumanEval/97", "keyWords": "ir unit digits"}
{"task_id": "HumanEval/98", "keyWords": "uppercase vowels, string s, even indices"}
{"task_id": "HumanEval/99", "keyWords": "closest integer, value (string"}
{"task_id": "HumanEval/100", "keyWords": "next even number, next odd number, the number, next level, each level, positive integer"}
{"task_id": "HumanEval/101", "keyWords": "your task"}
{"task_id": "HumanEval/102", "keyWords": "biggest even integer number, positive numbers x, such number, this function"}
{"task_id": "HumanEval/103", "keyWords": "positive integers, nearest integer"}
{"task_id": "HumanEval/104", "keyWords": "sorted list, returned list, positive integers x, even digit, increasing order"}
{"task_id": "HumanEval/105", "keyWords": "resulting array, corresponding name"}
{"task_id": "HumanEval/106", "keyWords": "function f"}
{"task_id": "HumanEval/107", "keyWords": "integer palindromes, positive integer"}
{"task_id": "HumanEval/108", "keyWords": "signed digits, signed digit, function count_nums"}
{"task_id": "HumanEval/109", "keyWords": "given array, one right shift operation, sorted array, perform right shift operation, array 'arr, array i, the given list, the last element, above operation, following operation, right direction, n integers arr[1, starting position, unique elements, your task, 0th index, non-decreasing order"}
{"task_id": "HumanEval/110", "keyWords": "exchange elements, exchanged elements, even numbers"}
{"task_id": "HumanEval/111", "keyWords": "space separated lowercase letters, if several letters, corresponding count, string representing, same occurrence"}
{"task_id": "HumanEval/112", "keyWords": "result string, a string, strings s, tuple containing"}
{"task_id": "HumanEval/113", "keyWords": "each string consists, each element i, odd digits, only digits, odd elements, th string, out put"}
{"task_id": "HumanEval/114", "keyWords": "integers nums, minimum sum, non-empty sub-array"}
{"task_id": "HumanEval/115", "keyWords": "each row represents, ex tract water, row represents, single unit, your task, corresponding bucket, rectangular grid, same capacity"}
{"task_id": "HumanEval/116", "keyWords": "for similar number, non-negative integers ac cording, ir binary representation, decimal value, ascending order"}
{"task_id": "HumanEval/117", "keyWords": "string s, input string contains, empty list, natural number"}
{"task_id": "HumanEval/118", "keyWords": "given string contains english letter, return empty string, word (case sensitive), above condition, your task, right side"}
{"task_id": "HumanEval/119", "keyWords": "good string, a string s, resulting string, both strings consist, close parentheses, return 'yes, no' o therwise, your job, for example"}
{"task_id": "HumanEval/120", "keyWords": "positive integer k, maximum k numbers, length k, sorted list, array arr"}
{"task_id": "HumanEval/121", "keyWords": "odd elements, non-empty list, even positions"}
{"task_id": "HumanEval/122", "keyWords": "integer k, k elements, integers arr, non-empty array"}
{"task_id": "HumanEval/123", "keyWords": "p revious ter m, ter m plus, next ter m, each ter m, ter m, the collat z conjecture, p revious term, collat z sequence, positive integer n, the conjecture, sorted list, sequence defined, positive integer, collat z(, odd numbers, mathe matics, increasing order"}
{"task_id": "HumanEval/124", "keyWords": "the date string, the date, given date string, the number, the months, following rules, therwise false"}
{"task_id": "HumanEval/125", "keyWords": "commas exists, whitespaces exists, lower-case letters, odd order"}
{"task_id": "HumanEval/126", "keyWords": "if list, negative numbers, ascending order, only integers"}
{"task_id": "HumanEval/127", "keyWords": "each interval"}
{"task_id": "HumanEval/128", "keyWords": "integers multiplied, array arr, empty arr, each number"}
{"task_id": "HumanEval/129", "keyWords": "a path a, visiting exactly k cells, you ca n not, length k, positive integer k, path b, neighbor cells, grid contains, minimum path, integer index i, any cell, length k), each cell, n columns, n rows, any j, every integer, ther words, each step, considered less"}
{"task_id": "HumanEval/130", "keyWords": "tribonacci sequence, non-negative integer number, last couple centuries, tri(n -, tri(n +, mathe maticians, for example"}
{"task_id": "HumanEval/131", "keyWords": "odd digits, positive integer"}
{"task_id": "HumanEval/132", "keyWords": "\u279e true, valid subse quence, square brackets, the function, \u279e false, subse quence"}
{"task_id": "HumanEval/133", "keyWords": "given list, squared numbers, upper int"}
{"task_id": "HumanEval/134", "keyWords": "last character, alphabetical character, given string, returns true"}
{"task_id": "HumanEval/135", "keyWords": "such element exists, given array, largest index, duplicate values"}
{"task_id": "HumanEval/136", "keyWords": "positive integers, negative integers"}
{"task_id": "HumanEval/137", "keyWords": "given variable ty pe, real number, real numbers, larger variable, \u279e none, floating point"}
{"task_id": "HumanEval/138", "keyWords": "positive even numbers, given number"}
{"task_id": "HumanEval/139", "keyWords": "the brazilian factorial"}
{"task_id": "HumanEval/140", "keyWords": "consecutive spaces, string text"}
{"task_id": "HumanEval/141", "keyWords": "a file's name, file's name contains, file's name, no' o therwise, following conditions, latin alphapet"}
{"task_id": "HumanEval/142", "keyWords": "the function, this function, integer entry"}
{"task_id": "HumanEval/143", "keyWords": "original sentence, sentence contains, new string, original one, prime numbers"}
{"task_id": "HumanEval/144", "keyWords": "positive whole numbers, 7 / 10, 10 /, both numerator, the function, whole number, valid fractions, string representation, following format, your task"}
{"task_id": "HumanEval/145", "keyWords": "ir digits, ir index, given list, similar sum, original list, ac cording, m based"}
{"task_id": "HumanEval/146", "keyWords": "last digits"}
{"task_id": "HumanEval/147", "keyWords": "positive integer, integer array, a [k"}
{"task_id": "HumanEval/148", "keyWords": "correct planet names, planet names, strings planet, the function, tuple containing, empty tuple, eight planets, solar system"}
{"task_id": "HumanEval/149", "keyWords": "the list, list sorted, resulted list, the order, sorted order, the function, same length, each word, odd lengths, ac cepts"}
{"task_id": "HumanEval/150", "keyWords": "a simple program, prime number"}
{"task_id": "HumanEval/151", "keyWords": "i gnore numbers, input list"}
{"task_id": "HumanEval/152", "keyWords": "equal length, same length, your task, definitely worth, absolute difference"}
{"task_id": "HumanEval/153", "keyWords": "extension 's name, the extensions, strongest extension, strongestextension name, same strength, fraction cap, lowercase letters, additional classes"}
{"task_id": "HumanEval/154", "keyWords": "cycpattern_check( \"efef\", cycpattern_check( \"abcd, cycpattern_check( \"himenss\", second word, first word"}
{"task_id": "HumanEval/155", "keyWords": "odd digits"}
{"task_id": "HumanEval/156", "keyWords": "roman numeral equivalent, positive integer"}
{"task_id": "HumanEval/157", "keyWords": "angled triangle, right angle"}
{"task_id": "HumanEval/158", "keyWords": "the list contains different words, if multiple strings, unique characters, maximum number, lexicographical order, ac cepts"}
{"task_id": "HumanEval/159", "keyWords": "remaining carrots, eaten carrots, day 's meals, certain number, tal number, hungry rabbit"}
{"task_id": "HumanEval/160", "keyWords": "the basic algebra operations, basic algebra operations, given lists, floor division, lists operator"}
{"task_id": "HumanEval/161", "keyWords": "string s, string contains, resulted string, the function, vise versa"}
{"task_id": "HumanEval/162", "keyWords": "string 'text, equivalent string, empty string, if 'text"}
{"task_id": "HumanEval/163", "keyWords": "positive integers a, even digits, ascending order"}
