{"task_id": "HumanEval/0", "keyWords": ""}
{"task_id": "HumanEval/1", "keyWords": ""}
{"task_id": "HumanEval/2", "keyWords": "(largest integer smaller"}
{"task_id": "HumanEval/3", "keyWords": ""}
{"task_id": "HumanEval/4", "keyWords": ""}
{"task_id": "HumanEval/5", "keyWords": ""}
{"task_id": "HumanEval/6", "keyWords": ""}
{"task_id": "HumanEval/7", "keyWords": ""}
{"task_id": "HumanEval/8", "keyWords": ""}
{"task_id": "HumanEval/9", "keyWords": "until given moment"}
{"task_id": "HumanEval/10", "keyWords": ""}
{"task_id": "HumanEval/11", "keyWords": ""}
{"task_id": "HumanEval/12", "keyWords": ""}
{"task_id": "HumanEval/13", "keyWords": ""}
{"task_id": "HumanEval/14", "keyWords": ""}
{"task_id": "HumanEval/15", "keyWords": ""}
{"task_id": "HumanEval/16", "keyWords": ""}
{"task_id": "HumanEval/17", "keyWords": ""}
{"task_id": "HumanEval/18", "keyWords": ""}
{"task_id": "HumanEval/19", "keyWords": ""}
{"task_id": "HumanEval/20", "keyWords": ""}
{"task_id": "HumanEval/21", "keyWords": ""}
{"task_id": "HumanEval/22", "keyWords": "filter given list"}
{"task_id": "HumanEval/23", "keyWords": ""}
{"task_id": "HumanEval/24", "keyWords": ""}
{"task_id": "HumanEval/25", "keyWords": ""}
{"task_id": "HumanEval/26", "keyWords": ""}
{"task_id": "HumanEval/27", "keyWords": ""}
{"task_id": "HumanEval/28", "keyWords": ""}
{"task_id": "HumanEval/29", "keyWords": ""}
{"task_id": "HumanEval/30", "keyWords": ""}
{"task_id": "HumanEval/31", "keyWords": ""}
{"task_id": "HumanEval/32", "keyWords": "largest non zero coefficient, return x s[, takes list xs, having even number"}
{"task_id": "HumanEval/33", "keyWords": "is id entical"}
{"task_id": "HumanEval/34", "keyWords": ""}
{"task_id": "HumanEval/35", "keyWords": ""}
{"task_id": "HumanEval/36", "keyWords": ""}
{"task_id": "HumanEval/37", "keyWords": "is id entical"}
{"task_id": "HumanEval/38", "keyWords": "returns encoded string, = [(grou p["}
{"task_id": "HumanEval/39", "keyWords": ""}
{"task_id": "HumanEval/40", "keyWords": ""}
{"task_id": "HumanEval/41", "keyWords": "are infinitely sturdy"}
{"task_id": "HumanEval/42", "keyWords": ""}
{"task_id": "HumanEval/43", "keyWords": ""}
{"task_id": "HumanEval/44", "keyWords": "return string representation, change numerical base"}
{"task_id": "HumanEval/45", "keyWords": ""}
{"task_id": "HumanEval/46", "keyWords": ""}
{"task_id": "HumanEval/47", "keyWords": ""}
{"task_id": "HumanEval/48", "keyWords": ""}
{"task_id": "HumanEval/49", "keyWords": ""}
{"task_id": "HumanEval/50", "keyWords": "shifting every character, returns encoded string"}
{"task_id": "HumanEval/51", "keyWords": ""}
{"task_id": "HumanEval/52", "keyWords": "below threshold t"}
{"task_id": "HumanEval/53", "keyWords": ""}
{"task_id": "HumanEval/54", "keyWords": ""}
{"task_id": "HumanEval/55", "keyWords": ""}
{"task_id": "HumanEval/56", "keyWords": ""}
{"task_id": "HumanEval/57", "keyWords": "are monotonically increasing"}
{"task_id": "HumanEval/58", "keyWords": "sorted unique common elements"}
{"task_id": "HumanEval/59", "keyWords": ""}
{"task_id": "HumanEval/60", "keyWords": ""}
{"task_id": "HumanEval/61", "keyWords": ""}
{"task_id": "HumanEval/62", "keyWords": ""}
{"task_id": "HumanEval/63", "keyWords": ""}
{"task_id": "HumanEval/64", "keyWords": ""}
{"task_id": "HumanEval/65", "keyWords": ""}
{"task_id": "HumanEval/66", "keyWords": ""}
{"task_id": "HumanEval/67", "keyWords": ""}
{"task_id": "HumanEval/68", "keyWords": "has non-negative integer nodes, has smallest index"}
{"task_id": "HumanEval/69", "keyWords": ""}
{"task_id": "HumanEval/70", "keyWords": ""}
{"task_id": "HumanEval/71", "keyWords": ""}
{"task_id": "HumanEval/72", "keyWords": ""}
{"task_id": "HumanEval/73", "keyWords": ""}
{"task_id": "HumanEval/74", "keyWords": ""}
{"task_id": "HumanEval/75", "keyWords": "is less then"}
{"task_id": "HumanEval/76", "keyWords": ""}
{"task_id": "HumanEval/77", "keyWords": ""}
{"task_id": "HumanEval/78", "keyWords": ""}
{"task_id": "HumanEval/79", "keyWords": ""}
{"task_id": "HumanEval/80", "keyWords": ""}
{"task_id": "HumanEval/81", "keyWords": ""}
{"task_id": "HumanEval/82", "keyWords": ""}
{"task_id": "HumanEval/83", "keyWords": ""}
{"task_id": "HumanEval/84", "keyWords": ""}
{"task_id": "HumanEval/85", "keyWords": ""}
{"task_id": "HumanEval/86", "keyWords": ""}
{"task_id": "HumanEval/87", "keyWords": ""}
{"task_id": "HumanEval/88", "keyWords": ""}
{"task_id": "HumanEval/89", "keyWords": ""}
{"task_id": "HumanEval/90", "keyWords": ""}
{"task_id": "HumanEval/91", "keyWords": ""}
{"task_id": "HumanEval/92", "keyWords": ""}
{"task_id": "HumanEval/93", "keyWords": ""}
{"task_id": "HumanEval/94", "keyWords": ""}
{"task_id": "HumanEval/95", "keyWords": ""}
{"task_id": "HumanEval/96", "keyWords": "are prime numbers"}
{"task_id": "HumanEval/97", "keyWords": ""}
{"task_id": "HumanEval/98", "keyWords": ""}
{"task_id": "HumanEval/99", "keyWords": ""}
{"task_id": "HumanEval/100", "keyWords": ""}
{"task_id": "HumanEval/101", "keyWords": ""}
{"task_id": "HumanEval/102", "keyWords": ""}
{"task_id": "HumanEval/103", "keyWords": ""}
{"task_id": "HumanEval/104", "keyWords": ""}
{"task_id": "HumanEval/105", "keyWords": ""}
{"task_id": "HumanEval/106", "keyWords": ""}
{"task_id": "HumanEval/107", "keyWords": ""}
{"task_id": "HumanEval/108", "keyWords": "has signed digits"}
{"task_id": "HumanEval/109", "keyWords": "have unique elements"}
{"task_id": "HumanEval/110", "keyWords": ""}
{"task_id": "HumanEval/111", "keyWords": ""}
{"task_id": "HumanEval/112", "keyWords": ""}
{"task_id": "HumanEval/113", "keyWords": ""}
{"task_id": "HumanEval/114", "keyWords": ""}
{"task_id": "HumanEval/115", "keyWords": ""}
{"task_id": "HumanEval/116", "keyWords": ""}
{"task_id": "HumanEval/117", "keyWords": ""}
{"task_id": "HumanEval/118", "keyWords": ""}
{"task_id": "HumanEval/119", "keyWords": ""}
{"task_id": "HumanEval/120", "keyWords": ""}
{"task_id": "HumanEval/121", "keyWords": ""}
{"task_id": "HumanEval/122", "keyWords": ""}
{"task_id": "HumanEval/123", "keyWords": "then each ter m"}
{"task_id": "HumanEval/124", "keyWords": ""}
{"task_id": "HumanEval/125", "keyWords": ""}
{"task_id": "HumanEval/126", "keyWords": ""}
{"task_id": "HumanEval/127", "keyWords": ""}
{"task_id": "HumanEval/128", "keyWords": ""}
{"task_id": "HumanEval/129", "keyWords": "means visiting exactly k cells, is lexicographically less, is considered less"}
{"task_id": "HumanEval/130", "keyWords": "is tribonacci sequence"}
{"task_id": "HumanEval/131", "keyWords": ""}
{"task_id": "HumanEval/132", "keyWords": ""}
{"task_id": "HumanEval/133", "keyWords": ""}
{"task_id": "HumanEval/134", "keyWords": ""}
{"task_id": "HumanEval/135", "keyWords": ""}
{"task_id": "HumanEval/136", "keyWords": ""}
{"task_id": "HumanEval/137", "keyWords": ""}
{"task_id": "HumanEval/138", "keyWords": ""}
{"task_id": "HumanEval/139", "keyWords": ""}
{"task_id": "HumanEval/140", "keyWords": ""}
{"task_id": "HumanEval/141", "keyWords": "the file's name contains"}
{"task_id": "HumanEval/142", "keyWords": ""}
{"task_id": "HumanEval/143", "keyWords": "are prime numbers"}
{"task_id": "HumanEval/144", "keyWords": "are positive whole numbers, are valid fractions, are string representation"}
{"task_id": "HumanEval/145", "keyWords": "order ac cording"}
{"task_id": "HumanEval/146", "keyWords": ""}
{"task_id": "HumanEval/147", "keyWords": ""}
{"task_id": "HumanEval/148", "keyWords": "not correct planet names, are eight planets"}
{"task_id": "HumanEval/149", "keyWords": "have odd lengths"}
{"task_id": "HumanEval/150", "keyWords": ""}
{"task_id": "HumanEval/151", "keyWords": ""}
{"task_id": "HumanEval/152", "keyWords": ""}
{"task_id": "HumanEval/153", "keyWords": "load additional classes"}
{"task_id": "HumanEval/154", "keyWords": ""}
{"task_id": "HumanEval/155", "keyWords": ""}
{"task_id": "HumanEval/156", "keyWords": ""}
{"task_id": "HumanEval/157", "keyWords": "is right angle"}
{"task_id": "HumanEval/158", "keyWords": "have maximum number"}
{"task_id": "HumanEval/159", "keyWords": "enough remaining carrots"}
{"task_id": "HumanEval/160", "keyWords": "has basic algebra operations"}
{"task_id": "HumanEval/161", "keyWords": ""}
{"task_id": "HumanEval/162", "keyWords": "hash equivalent string"}
{"task_id": "HumanEval/163", "keyWords": ""}
{"task_id": "HumanEval/0", "keyWords": "given threshold, given list"}
{"task_id": "HumanEval/1", "keyWords": "string containing multiple grou ps, separate grou ps, separate those group, nested parentheses, separate strings, i gnore, open brace, input string, your goal"}
{"task_id": "HumanEval/2", "keyWords": "positive floating point number, integer part, decimal part, integer smaller, given number"}
{"task_id": "HumanEval/3", "keyWords": "ac count fallls, bank ac count, your task, withdrawal operations, point function"}
{"task_id": "HumanEval/4", "keyWords": "calculate mean absolute deviation, mean absolute deviation, average absolute difference, input numbers, given list"}
{"task_id": "HumanEval/5", "keyWords": "input list `numbers, consecutive elements, number 'delimeter"}
{"task_id": "HumanEval/6", "keyWords": "string represented multiple grou ps, nested parentheses, deepest level"}
{"task_id": "HumanEval/7", "keyWords": "contain given substring, input list"}
{"task_id": "HumanEval/8", "keyWords": "tuple consisting, given list, empty product, empty sum"}
{"task_id": "HumanEval/9", "keyWords": "rolling maximum element, given moment, given list"}
{"task_id": "HumanEval/10", "keyWords": "string prefix, supplied string, given string, palindromic suffix, longest postfix, shortest palindrome, def make_palindrome(string"}
{"task_id": "HumanEval/11", "keyWords": "perform binary xor, b consisting, strings a"}
{"task_id": "HumanEval/12", "keyWords": "input list, same length"}
{"task_id": "HumanEval/13", "keyWords": "greatest common divisor, integers a"}
{"task_id": "HumanEval/14", "keyWords": "input string"}
{"task_id": "HumanEval/15", "keyWords": "string containing space, delimited numbers"}
{"task_id": "HumanEval/16", "keyWords": "many distinct characters"}
{"task_id": "HumanEval/17", "keyWords": "string representing musical notes, special ascii format, quater note, half note, your task"}
{"task_id": "HumanEval/18", "keyWords": "count overlaping cases, original string, many times, given substring"}
{"task_id": "HumanEval/19", "keyWords": "valid choices, delimited string"}
{"task_id": "HumanEval/20", "keyWords": "larger number, maller number, least tw, supplied list"}
{"task_id": "HumanEval/21", "keyWords": "linear transform, element s), smallest number"}
{"task_id": "HumanEval/22", "keyWords": "any python values, given list"}
{"task_id": "HumanEval/23", "keyWords": "given string"}
{"task_id": "HumanEval/24", "keyWords": "largest number, given number"}
{"task_id": "HumanEval/25", "keyWords": "many times, given integer, input number, prime factors"}
{"task_id": "HumanEval/26", "keyWords": "keep order"}
{"task_id": "HumanEval/27", "keyWords": "flip lowercase characters, given string"}
{"task_id": "HumanEval/28", "keyWords": "single string"}
{"task_id": "HumanEval/29", "keyWords": "given prefix, input list"}
{"task_id": "HumanEval/30", "keyWords": "positive numbers"}
{"task_id": "HumanEval/31", "keyWords": "given number"}
{"task_id": "HumanEval/32", "keyWords": "non zero coefficient, x ^n, x s[, point x, coefficients xs, list xs, even number"}
{"task_id": "HumanEval/33", "keyWords": "id entical, this function, corresponding indicies"}
{"task_id": "HumanEval/34", "keyWords": "sorted unique elements"}
{"task_id": "HumanEval/35", "keyWords": "maximum element"}
{"task_id": "HumanEval/36", "keyWords": "integers less"}
{"task_id": "HumanEval/37", "keyWords": "even indicies, odd indicies, id entical, this function"}
{"task_id": "HumanEval/38", "keyWords": "cycling grou ps, * i +, grou ps, unless group, each group, grou p[, string encoded, encoded string, join(grou ps, encode_cyclic function, def decode_cyclic, [(grou p[, cycle elements"}
{"task_id": "HumanEval/39", "keyWords": "fibonacci number, th number"}
{"task_id": "HumanEval/40", "keyWords": "distinct elements"}
{"task_id": "HumanEval/41", "keyWords": "perfectly straight infinitely long line, two cars, all cars, infinitely sturdy, such collisions, ir trajectory, same speed, different set, right hits, this function"}
{"task_id": "HumanEval/42", "keyWords": "return list"}
{"task_id": "HumanEval/43", "keyWords": "distinct elements"}
{"task_id": "HumanEval/44", "keyWords": "numerical base, base numbers, string representation, input number"}
{"task_id": "HumanEval/45", "keyWords": "high return, given length"}
{"task_id": "HumanEval/46", "keyWords": "the fib4 number sequence, fib4 number sequence, sequence similar, th element, efficiently compute, 's defined, fibbonacci sequnece"}
{"task_id": "HumanEval/47", "keyWords": "list l, return median"}
{"task_id": "HumanEval/48", "keyWords": "given string"}
{"task_id": "HumanEval/49", "keyWords": "modulo p"}
{"task_id": "HumanEval/50", "keyWords": "every character, shift function, string encoded, encoded string"}
{"task_id": "HumanEval/51", "keyWords": ""}
{"task_id": "HumanEval/52", "keyWords": "threshold t, list l"}
{"task_id": "HumanEval/53", "keyWords": "numbers x"}
{"task_id": "HumanEval/54", "keyWords": "same characters"}
{"task_id": "HumanEval/55", "keyWords": "th fibonacci number"}
{"task_id": "HumanEval/56", "keyWords": "corresponding closing bracket"}
{"task_id": "HumanEval/57", "keyWords": "monotonically increasing"}
{"task_id": "HumanEval/58", "keyWords": "unique common elements"}
{"task_id": "HumanEval/59", "keyWords": "largest prime factor"}
{"task_id": "HumanEval/60", "keyWords": "sums numbers"}
{"task_id": "HumanEval/61", "keyWords": "corresponding closing bracket"}
{"task_id": "HumanEval/62", "keyWords": "xs represent coefficients, same form, return derivative, x s["}
{"task_id": "HumanEval/63", "keyWords": "the fibfib number sequence, fibfib number sequence, sequence similar, th element, efficiently compute, 's defined, fibbonacci sequnece"}
{"task_id": "HumanEval/64", "keyWords": "function vowels, def vowels, given word, string representing, count (s, test cases"}
{"task_id": "HumanEval/65", "keyWords": "integer x"}
{"task_id": "HumanEval/66", "keyWords": "upper characters, ascii codes"}
{"task_id": "HumanEval/67", "keyWords": "tal number, mango fruits"}
{"task_id": "HumanEval/68", "keyWords": "same smallest even value, smallest even value, non-negative integer nodes, if multiple nodes, smallest index, given array, even values"}
{"task_id": "HumanEval/69", "keyWords": "integer itself, greatest integer, positive integers, non-empty list, the frequency"}
{"task_id": "HumanEval/70", "keyWords": "strange sorting, strange order, remaining integers, minimum value"}
{"task_id": "HumanEval/71", "keyWords": "three sides, valid triangle, third side, decimal points"}
{"task_id": "HumanEval/72", "keyWords": "maximum possible weight w, the object q, object q, palindromic list, 's balanced"}
{"task_id": "HumanEval/73", "keyWords": "a palindromic array, array palindromic, array arr, minimum number"}
{"task_id": "HumanEval/74", "keyWords": "o ther list, same number, tal number, list less"}
{"task_id": "HumanEval/75", "keyWords": "false o therwise, prime numbers, less then, given number"}
{"task_id": "HumanEval/76", "keyWords": "simple power, number x, your task"}
{"task_id": "HumanEval/77", "keyWords": "integer number"}
{"task_id": "HumanEval/78", "keyWords": "smaller natural numbers, natural number, hexadecimal digits, d (=decimal, b (=decimal, hexadecimal number, prime number, prime numbers, empty string, following digits"}
{"task_id": "HumanEval/79", "keyWords": "the extra characters, each character, extra couple, the function, binary format, decimal form"}
{"task_id": "HumanEval/80", "keyWords": "a string, string s, consecutive letters, your task"}
{"task_id": "HumanEval/81", "keyWords": "the only problem, own algorith m, letter grades, the teacher, letter grade, following table, gpa s"}
{"task_id": "HumanEval/82", "keyWords": "prime number"}
{"task_id": "HumanEval/83", "keyWords": "positive integers, positive integer"}
{"task_id": "HumanEval/84", "keyWords": "positive integer n, tal sum"}
{"task_id": "HumanEval/85", "keyWords": "odd indices, even elements, integers lst, non-empty list"}
{"task_id": "HumanEval/86", "keyWords": "blan k spaces, ascending order, ascii value, new word, ordered version"}
{"task_id": "HumanEval/87", "keyWords": "sort coordinates initially, descending order, sort coordinates, ascending order, given lst, different number, nested lists, dimensional data"}
{"task_id": "HumanEval/88", "keyWords": "index value, given array, non-negative integers"}
{"task_id": "HumanEval/89", "keyWords": "the alphabet, string encrypted, function encrypt"}
{"task_id": "HumanEval/90", "keyWords": "such element, smallest element"}
{"task_id": "HumanEval/91", "keyWords": "a boredom"}
{"task_id": "HumanEval/92", "keyWords": "ther cases, o ther"}
{"task_id": "HumanEval/93", "keyWords": "only letters, english alphabet, swaps case"}
{"task_id": "HumanEval/94", "keyWords": "largest prime value"}
{"task_id": "HumanEval/95", "keyWords": "upper case, the function, given dictionary"}
{"task_id": "HumanEval/96", "keyWords": "prime numbers, non-negative integer"}
{"task_id": "HumanEval/97", "keyWords": "ir unit digits"}
{"task_id": "HumanEval/98", "keyWords": "even indices, uppercase vowels, string s"}
{"task_id": "HumanEval/99", "keyWords": "closest integer, value (string"}
{"task_id": "HumanEval/100", "keyWords": "next even number, next odd number, next level, each level, positive integer, the number"}
{"task_id": "HumanEval/101", "keyWords": "your task"}
{"task_id": "HumanEval/102", "keyWords": "biggest even integer number, positive numbers x, this function, such number"}
{"task_id": "HumanEval/103", "keyWords": "nearest integer, positive integers"}
{"task_id": "HumanEval/104", "keyWords": "positive integers x, sorted list, returned list, increasing order, even digit"}
{"task_id": "HumanEval/105", "keyWords": "corresponding name, resulting array"}
{"task_id": "HumanEval/106", "keyWords": "function f"}
{"task_id": "HumanEval/107", "keyWords": "integer palindromes, positive integer"}
{"task_id": "HumanEval/108", "keyWords": "signed digits, signed digit, function count_nums"}
{"task_id": "HumanEval/109", "keyWords": "one right shift operation, perform right shift operation, given array, the given list, sorted array, array i, array 'arr, n integers arr[1, right direction, the last element, above operation, following operation, unique elements, 0th index, starting position, non-decreasing order, your task"}
{"task_id": "HumanEval/110", "keyWords": "even numbers, exchange elements, exchanged elements"}
{"task_id": "HumanEval/111", "keyWords": "space separated lowercase letters, if several letters, same occurrence, corresponding count, string representing"}
{"task_id": "HumanEval/112", "keyWords": "a string, result string, tuple containing, strings s"}
{"task_id": "HumanEval/113", "keyWords": "each string consists, each element i, odd digits, th string, odd elements, only digits, out put"}
{"task_id": "HumanEval/114", "keyWords": "non-empty sub-array, minimum sum, integers nums"}
{"task_id": "HumanEval/115", "keyWords": "ex tract water, each row represents, your task, same capacity, corresponding bucket, rectangular grid, row represents, single unit"}
{"task_id": "HumanEval/116", "keyWords": "non-negative integers ac cording, for similar number, ir binary representation, decimal value, ascending order"}
{"task_id": "HumanEval/117", "keyWords": "input string contains, string s, natural number, empty list"}
{"task_id": "HumanEval/118", "keyWords": "given string contains english letter, return empty string, word (case sensitive), your task, above condition, right side"}
{"task_id": "HumanEval/119", "keyWords": "a string s, good string, no' o therwise, both strings consist, resulting string, return 'yes, for example, close parentheses, your job"}
{"task_id": "HumanEval/120", "keyWords": "positive integer k, maximum k numbers, length k, sorted list, array arr"}
{"task_id": "HumanEval/121", "keyWords": "even positions, odd elements, non-empty list"}
{"task_id": "HumanEval/122", "keyWords": "k elements, integer k, integers arr, non-empty array"}
{"task_id": "HumanEval/123", "keyWords": "p revious ter m, the collat z conjecture, each ter m, collat z sequence, next ter m, ter m plus, ter m, positive integer n, p revious term, sorted list, positive integer, the conjecture, increasing order, mathe matics, sequence defined, collat z(, odd numbers"}
{"task_id": "HumanEval/124", "keyWords": "the date string, given date string, the date, the months, following rules, therwise false, the number"}
{"task_id": "HumanEval/125", "keyWords": "commas exists, whitespaces exists, odd order, lower-case letters"}
{"task_id": "HumanEval/126", "keyWords": "only integers, negative numbers, if list, ascending order"}
{"task_id": "HumanEval/127", "keyWords": "each interval"}
{"task_id": "HumanEval/128", "keyWords": "empty arr, array arr, each number, integers multiplied"}
{"task_id": "HumanEval/129", "keyWords": "visiting exactly k cells, you ca n not, positive integer k, integer index i, a path a, length k, path b, any j, n columns, n rows, every integer, ordered list, ordered lists, each cell, minimum path, any cell, necessarily distinct, please note, ther words, grid contains"}
{"task_id": "HumanEval/130", "keyWords": "non-negative integer number, last couple centuries, tri(n +, tri(n -, for example, mathe maticians, tribonacci sequence"}
{"task_id": "HumanEval/131", "keyWords": "odd digits, positive integer"}
{"task_id": "HumanEval/132", "keyWords": "valid subse quence, subse quence, \u279e true, square brackets, \u279e false, the function"}
{"task_id": "HumanEval/133", "keyWords": "upper int, squared numbers, given list"}
{"task_id": "HumanEval/134", "keyWords": "alphabetical character, last character, given string, returns true"}
{"task_id": "HumanEval/135", "keyWords": "such element exists, given array, duplicate values, largest index"}
{"task_id": "HumanEval/136", "keyWords": "positive integers, negative integers"}
{"task_id": "HumanEval/137", "keyWords": "given variable ty pe, larger variable, real number, \u279e none, floating point, real numbers"}
{"task_id": "HumanEval/138", "keyWords": "positive even numbers, given number"}
{"task_id": "HumanEval/139", "keyWords": "the brazilian factorial"}
{"task_id": "HumanEval/140", "keyWords": "string text, consecutive spaces"}
{"task_id": "HumanEval/141", "keyWords": "file's name contains, a file's name, no' o therwise, file's name, latin alphapet, following conditions"}
{"task_id": "HumanEval/142", "keyWords": "the function, this function, integer entry"}
{"task_id": "HumanEval/143", "keyWords": "original sentence, new string, original one, sentence contains, prime numbers"}
{"task_id": "HumanEval/144", "keyWords": "positive whole numbers, 7 / 10, whole number, 10 /, your task, both numerator, following format, the function, valid fractions, string representation"}
{"task_id": "HumanEval/145", "keyWords": "original list, ir index, ir digits, given list, m based, similar sum, ac cording"}
{"task_id": "HumanEval/146", "keyWords": "last digits"}
{"task_id": "HumanEval/147", "keyWords": "integer array, positive integer, a [k"}
{"task_id": "HumanEval/148", "keyWords": "correct planet names, strings planet, planet names, empty tuple, tuple containing, the function, solar system, eight planets"}
{"task_id": "HumanEval/149", "keyWords": "the list, list sorted, resulted list, the order, the function, same length, each word, ac cepts, sorted order, odd lengths"}
{"task_id": "HumanEval/150", "keyWords": "a simple program, prime number"}
{"task_id": "HumanEval/151", "keyWords": "i gnore numbers, input list"}
{"task_id": "HumanEval/152", "keyWords": "same length, equal length, absolute difference, definitely worth, your task"}
{"task_id": "HumanEval/153", "keyWords": "extension 's name, additional classes, the extensions, strongest extension, lowercase letters, fraction cap, strongestextension name, same strength"}
{"task_id": "HumanEval/154", "keyWords": "cycpattern_check( \"himenss\", cycpattern_check( \"efef\", cycpattern_check( \"abcd, first word, second word"}
{"task_id": "HumanEval/155", "keyWords": "odd digits"}
{"task_id": "HumanEval/156", "keyWords": "roman numeral equivalent, positive integer"}
{"task_id": "HumanEval/157", "keyWords": "right angle, angled triangle"}
{"task_id": "HumanEval/158", "keyWords": "the list contains different words, if multiple strings, lexicographical order, unique characters, ac cepts, maximum number"}
{"task_id": "HumanEval/159", "keyWords": "day 's meals, eaten carrots, remaining carrots, tal number, certain number, hungry rabbit"}
{"task_id": "HumanEval/160", "keyWords": "the basic algebra operations, basic algebra operations, given lists, lists operator, floor division"}
{"task_id": "HumanEval/161", "keyWords": "resulted string, string contains, string s, the function, vise versa"}
{"task_id": "HumanEval/162", "keyWords": "equivalent string, string 'text, empty string, if 'text"}
{"task_id": "HumanEval/163", "keyWords": "positive integers a, ascending order, even digits"}
